/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
define(["pgadmin.browser.endpoints","translations"], (__WEBPACK_EXTERNAL_MODULE_pgadmin_browser_endpoints__, __WEBPACK_EXTERNAL_MODULE_translations__) => { return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./pgadmin/tools/debugger/static/js/DebuggerConstants.js":
/*!***************************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/DebuggerConstants.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEBUGGER_ARGS: () => (/* binding */ DEBUGGER_ARGS),\n/* harmony export */   DEBUGGER_EVENTS: () => (/* binding */ DEBUGGER_EVENTS),\n/* harmony export */   MENUS: () => (/* binding */ MENUS),\n/* harmony export */   PANELS: () => (/* binding */ PANELS)\n/* harmony export */ });\n/////////////////////////////////////////////////////////////\n//\n// pgAdmin 4 - PostgreSQL Tools\n//\n// Copyright (C) 2013 - 2025, The pgAdmin Development Team\n// This software is released under the PostgreSQL Licence\n//\n//////////////////////////////////////////////////////////////\n\nconst DEBUGGER_EVENTS = {\n  TRIGGER_CLEAR_ALL_BREAKPOINTS: 'TRIGGER_CLEAR_ALL_BREAKPOINTS',\n  TRIGGER_TOGGLE_BREAKPOINTS: 'TRIGGER_TOGGLE_BREAKPOINTS',\n  TRIGGER_STOP_DEBUGGING: 'TRIGGER_STOP_DEBUGGING',\n  TRIGGER_CONTINUE_DEBUGGING: 'TRIGGER_CONTINUE_DEBUGGING',\n  TRIGGER_STEPOVER_DEBUGGING: 'TRIGGER_STEPOVER_DEBUGGING',\n  TRIGGER_STEINTO_DEBUGGING: 'TRIGGER_STEINTO_DEBUGGING',\n  TRIGGER_RESET_LAYOUT: 'TRIGGER_RESET_LAYOUT',\n  SET_STACK: 'SET_STACK',\n  SET_MESSAGES: 'SET_MESSAGES',\n  SET_RESULTS: 'SET_RESULTS',\n  SET_LOCAL_VARIABLES: 'SET_LOCAL_VARIABLES',\n  SET_PARAMETERS: 'SET_PARAMETERS',\n  SET_FRAME: 'SET_FRAME',\n  SET_LOCAL_VARIABLE_VALUE_CHANGE: 'SET_LOCAL_VARIABLE_VALUE_CHANGE',\n  SET_PARAMETERS_VALUE_CHANGE: 'SET_PARAMETERS_VALUE_CHANGE',\n  DISABLE_MENU: 'DISABLE_MENU',\n  ENABLE_MENU: 'ENABLE_MENU',\n  ENABLE_SPECIFIC_MENU: 'ENABLE_SPECIFIC_MENU',\n  FOCUS_PANEL: 'FOCUS_PANEL',\n  GET_TOOL_BAR_BUTTON_STATUS: 'GET_TOOL_BAR_BUTTON_STATUS'\n};\nconst PANELS = {\n  DEBUGGER: 'id-debugger',\n  PARAMETERS: 'id-parameters',\n  LOCAL_VARIABLES: 'id-local-variables',\n  MESSAGES: 'id-debugger-messages',\n  RESULTS: 'id-results',\n  STACK: 'id-stack'\n};\nconst MENUS = {\n  STEPINTO: 'step-into',\n  STEPOVER: 'step-over',\n  STOP: 'stop',\n  START: 'start',\n  CLEAR_ALL_BREAKPOINT: 'clear-all-breakpoint',\n  TOGGLE_BREAKPOINT: 'toggle-breakpoint'\n};\nconst DEBUGGER_ARGS = {\n  NO_DEFAULT: '<no default>',\n  NO_DEFAULT_VALUE: '<No default value>'\n};\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/DebuggerConstants.js?");

/***/ }),

/***/ "./pgadmin/tools/debugger/static/js/DebuggerModule.js":
/*!************************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/DebuggerModule.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DebuggerModule)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_dom_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sources/gettext */ \"./pgadmin/static/js/gettext.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(sources_gettext__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var sources_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sources/utils */ \"./pgadmin/static/js/utils.js\");\n/* harmony import */ var sources_url_for__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! sources/url_for */ \"./pgadmin/static/js/url_for.js\");\n/* harmony import */ var sources_url_for__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(sources_url_for__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var sources_window__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! sources/window */ \"./pgadmin/static/js/window.js\");\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module 'pgadmin.authenticate.kerberos'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n/* harmony import */ var tools_sqleditor_static_js_sqleditor_title__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tools/sqleditor/static/js/sqleditor_title */ \"./pgadmin/tools/sqleditor/static/js/sqleditor_title.js\");\n/* harmony import */ var _static_js_api_instance__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../static/js/api_instance */ \"./pgadmin/static/js/api_instance.js\");\n/* harmony import */ var _debugger_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./debugger_utils */ \"./pgadmin/tools/debugger/static/js/debugger_utils.js\");\n/* harmony import */ var _debugger_ui__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./debugger_ui */ \"./pgadmin/tools/debugger/static/js/debugger_ui.js\");\n/* harmony import */ var _static_js_helpers_ModalProvider__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../static/js/helpers/ModalProvider */ \"./pgadmin/static/js/helpers/ModalProvider.jsx\");\n/* harmony import */ var _components_DebuggerComponent__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./components/DebuggerComponent */ \"./pgadmin/tools/debugger/static/js/components/DebuggerComponent.jsx\");\n/* harmony import */ var _static_js_Theme__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../static/js/Theme */ \"./pgadmin/static/js/Theme/index.jsx\");\n/* harmony import */ var _browser_static_js_constants__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../browser/static/js/constants */ \"./pgadmin/browser/static/js/constants.js\");\n/* harmony import */ var _static_js_helpers_Notifier__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../static/js/helpers/Notifier */ \"./pgadmin/static/js/helpers/Notifier.jsx\");\n/* harmony import */ var _preferences_static_js_store__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../preferences/static/js/store */ \"./pgadmin/preferences/static/js/store.js\");\n/* harmony import */ var sources_pgadmin__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! sources/pgadmin */ \"./pgadmin/static/js/pgadmin.js\");\n/* harmony import */ var sources_pgadmin__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(sources_pgadmin__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var _static_js_PgAdminProvider__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../static/js/PgAdminProvider */ \"./pgadmin/static/js/PgAdminProvider.jsx\");\n\n/////////////////////////////////////////////////////////////\n//\n// pgAdmin 4 - PostgreSQL Tools\n//\n// Copyright (C) 2013 - 2025, The pgAdmin Development Team\n// This software is released under the PostgreSQL Licence\n//\n//////////////////////////////////////////////////////////////\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass DebuggerModule {\n  static getInstance() {\n    if (!DebuggerModule.instance) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      DebuggerModule.instance = new DebuggerModule(...args);\n    }\n    return DebuggerModule.instance;\n  }\n  constructor(pgAdmin, pgBrowser) {\n    this.pgAdmin = pgAdmin;\n    this.pgBrowser = pgBrowser;\n    this.funcArgs = new _debugger_ui__WEBPACK_IMPORTED_MODULE_12__[\"default\"]();\n    this.api = (0,_static_js_api_instance__WEBPACK_IMPORTED_MODULE_10__[\"default\"])();\n  }\n  init() {\n    if (this.initialized) return;\n    this.initialized = true;\n    // Initialize the context menu to display the debugging options when user open the context menu for functions, procedures, triggers and trigger functions.\n    this.pgBrowser.add_menus([{\n      name: 'direct_debugger',\n      node: 'function',\n      module: this,\n      applies: ['object', 'context'],\n      callback: 'getFunctionInformation',\n      category: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugging'),\n      priority: 10,\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debug'),\n      data: {\n        object: 'function'\n      },\n      enable: 'canDebug'\n    }, {\n      name: 'global_debugger',\n      node: 'function',\n      module: this,\n      applies: ['object', 'context'],\n      callback: 'checkFuncDebuggable',\n      category: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugging'),\n      priority: 10,\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Set Breakpoint'),\n      data: {\n        object: 'function',\n        debug_type: 'indirect'\n      },\n      enable: 'canDebug'\n    }, {\n      name: 'procedure_direct_debugger',\n      node: 'procedure',\n      module: this,\n      applies: ['object', 'context'],\n      callback: 'getFunctionInformation',\n      category: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugging'),\n      priority: 10,\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debug'),\n      data: {\n        object: 'procedure'\n      },\n      enable: 'canDebug'\n    }, {\n      name: 'procedure_indirect_debugger',\n      node: 'procedure',\n      module: this,\n      applies: ['object', 'context'],\n      callback: 'checkFuncDebuggable',\n      category: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugging'),\n      priority: 10,\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Set Breakpoint'),\n      data: {\n        object: 'procedure',\n        debug_type: 'indirect'\n      },\n      enable: 'canDebug'\n    }, {\n      name: 'trigger_function_indirect_debugger',\n      node: 'trigger_function',\n      module: this,\n      applies: ['object', 'context'],\n      callback: 'checkFuncDebuggable',\n      priority: 10,\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Set Breakpoint'),\n      category: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugging'),\n      data: {\n        object: 'trigger_function',\n        debug_type: 'indirect'\n      },\n      enable: 'canDebug'\n    }, {\n      name: 'trigger_indirect_debugger',\n      node: 'trigger',\n      module: this,\n      applies: ['object', 'context'],\n      callback: 'checkFuncDebuggable',\n      priority: 10,\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Set Breakpoint'),\n      category: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugging'),\n      data: {\n        object: 'trigger',\n        debug_type: 'indirect'\n      },\n      enable: 'canDebug'\n    }, {\n      name: 'package_function_direct_debugger',\n      node: 'edbfunc',\n      module: this,\n      applies: ['object', 'context'],\n      callback: 'getFunctionInformation',\n      category: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugging'),\n      priority: 10,\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debug'),\n      data: {\n        object: 'edbfunc'\n      },\n      enable: 'canDebug'\n    }, {\n      name: 'package_function_global_debugger',\n      node: 'edbfunc',\n      module: this,\n      applies: ['object', 'context'],\n      callback: 'checkFuncDebuggable',\n      category: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugging'),\n      priority: 10,\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Set Breakpoint'),\n      data: {\n        object: 'edbfunc',\n        debug_type: 'indirect'\n      },\n      enable: 'canDebug'\n    }, {\n      name: 'package_procedure_direct_debugger',\n      node: 'edbproc',\n      module: this,\n      applies: ['object', 'context'],\n      callback: 'getFunctionInformation',\n      category: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugging'),\n      priority: 10,\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debug'),\n      data: {\n        object: 'edbproc'\n      },\n      enable: 'canDebug'\n    }, {\n      name: 'package_procedure_global_debugger',\n      node: 'edbproc',\n      module: this,\n      applies: ['object', 'context'],\n      callback: 'checkFuncDebuggable',\n      category: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugging'),\n      priority: 10,\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Set Breakpoint'),\n      data: {\n        object: 'edbproc',\n        debug_type: 'indirect'\n      },\n      enable: 'canDebug'\n    }]);\n  }\n\n  // It will check weather the function is actually debuggable or not with pre-required condition.\n  canDebug(itemData, item, data) {\n    let tree = this.pgBrowser.tree,\n      d = itemData,\n      treeInfo = tree.getTreeNodeHierarchy(item);\n\n    // Disable debugging for catalog functions\n    if ('catalog' in treeInfo) return false;\n    if (!d) return false;\n\n    // For indirect debugging user must be super user\n    if (data?.debug_type == 'indirect' && !treeInfo.server.user.is_superuser) return false;\n\n    // Fetch object owner\n    let obj_owner = treeInfo.function?.funcowner || treeInfo.procedure?.funcowner || treeInfo.edbfunc?.funcowner || treeInfo.edbproc?.funcowner;\n\n    // Must be a super user or object owner to create breakpoints of any kind\n    if (!(treeInfo.server.user.is_superuser || obj_owner == treeInfo.server.user.name)) return false;\n\n    // For trigger node, language will be undefined - we should allow indirect debugging for trigger node\n    if (d.language == undefined && d._type == 'trigger' || d.language == undefined && d._type == 'edbfunc' || d.language == undefined && d._type == 'edbproc') {\n      return true;\n    }\n    let returnValue = true;\n    if (d.language != 'plpgsql' && d.language != 'edbspl') {\n      returnValue = false;\n    }\n    return returnValue;\n  }\n  /*\r\n  For the direct debugging, we need to fetch the function information to display in the dialog so \"generate_url\"\r\n  will dynamically generate the URL from the server_id, database_id, schema_id and function id.\r\n  */\n  generate_url(_url, treeInfo, node) {\n    let url = '{BASEURL}{URL}/{OBJTYPE}{REF}',\n      ref = '';\n    lodash__WEBPACK_IMPORTED_MODULE_1___default().each(lodash__WEBPACK_IMPORTED_MODULE_1___default().sortBy(lodash__WEBPACK_IMPORTED_MODULE_1___default().values(lodash__WEBPACK_IMPORTED_MODULE_1___default().pickBy(treeInfo, function (v, k) {\n      return k != 'server_group';\n    })), function (o) {\n      return o.priority;\n    }), function (o) {\n      ref = (0,sources_utils__WEBPACK_IMPORTED_MODULE_5__.sprintf)('%s/%s', ref, encodeURI(o._id));\n    });\n    let args = {\n      'URL': _url,\n      'BASEURL': sources_url_for__WEBPACK_IMPORTED_MODULE_6___default()('debugger.index'),\n      'REF': ref,\n      'OBJTYPE': encodeURI(node.type)\n    };\n    return url.replace(/{(\\w+)}/g, function (match, arg) {\n      return args[arg];\n    });\n  }\n  getUrl(_d, newTreeInfo, trans_id) {\n    let baseUrl;\n    if (_d._type == 'function' || _d._type == 'edbfunc') {\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_6___default()('debugger.initialize_target_for_function', {\n        'debug_type': 'direct',\n        'trans_id': trans_id,\n        'sid': newTreeInfo.server._id,\n        'did': newTreeInfo.database._id,\n        'scid': newTreeInfo.schema._id,\n        'func_id': (0,_debugger_utils__WEBPACK_IMPORTED_MODULE_11__.getFunctionId)(newTreeInfo)\n      });\n    } else if (_d._type == 'procedure' || _d._type == 'edbproc') {\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_6___default()('debugger.initialize_target_for_function', {\n        'debug_type': 'direct',\n        'trans_id': trans_id,\n        'sid': newTreeInfo.server._id,\n        'did': newTreeInfo.database._id,\n        'scid': newTreeInfo.schema._id,\n        'func_id': (0,_debugger_utils__WEBPACK_IMPORTED_MODULE_11__.getProcedureId)(newTreeInfo)\n      });\n    }\n    return baseUrl;\n  }\n  checkDbNameChange(data, dbNode, newTreeInfo, db_label) {\n    if (data?.data_obj?.db_name != lodash__WEBPACK_IMPORTED_MODULE_1___default().unescape(newTreeInfo.database.label)) {\n      db_label = data.data_obj.db_name;\n      let message = `Current database has been moved or renamed to ${db_label}. Click on the OK button to refresh the database name.`;\n      (0,tools_sqleditor_static_js_sqleditor_title__WEBPACK_IMPORTED_MODULE_9__.refresh_db_node)(message, dbNode);\n    }\n    return db_label;\n  }\n  getTreeNodeData(item) {\n    let t = this.pgBrowser.tree,\n      i = item || t.selected(),\n      d = i ? t.itemData(i) : undefined,\n      node = d && this.pgBrowser.Nodes[d._type];\n    return [t, i, d, node];\n  }\n  /*\r\n      Get the function information for the direct debugging to display the functions arguments and  other informations\r\n      in the user input dialog\r\n    */\n  getFunctionInformation(args, item) {\n    let [t, i, d, node] = this.getTreeNodeData(item);\n    let self = this,\n      tree_data = this.pgBrowser.tree.translateTreeNodeIdFromReactTree(i),\n      db_data = this.pgBrowser.tree.findNode(tree_data[3]),\n      dbNode = db_data.domNode;\n    if (!d) return;\n    let is_edb_proc = d._type == 'edbproc';\n    let treeInfo = t.getTreeNodeHierarchy(i),\n      _url = this.generate_url('init', treeInfo, node);\n    this.api({\n      url: _url,\n      method: 'GET'\n    }).then(res => {\n      let debug_info = res.data.data.debug_info,\n        trans_id = res.data.data.trans_id;\n      // Open dialog to take the input arguments from user if function having input arguments\n      if (debug_info[0]['require_input']) {\n        self.funcArgs.show(debug_info[0], 0, is_edb_proc, trans_id);\n      } else {\n        /* Initialize the target and create asynchronous connection and unique transaction ID\r\n        If there is no arguments to the functions then we should not ask for for function arguments and\r\n        Directly open the panel */\n        let _t = this.pgBrowser.tree,\n          _i = _t.selected(),\n          _d = _i ? _t.itemData(_i) : undefined;\n        let newTreeInfo = _t.getTreeNodeHierarchy(_i);\n        let baseUrl = self.getUrl(_d, newTreeInfo, trans_id);\n        self.api({\n          url: baseUrl,\n          method: 'POST'\n        }).then(function (result) {\n          let data = result.data.data;\n          let url = sources_url_for__WEBPACK_IMPORTED_MODULE_6___default()('debugger.direct', {\n            'trans_id': trans_id\n          });\n          let browser_preferences = _preferences_static_js_store__WEBPACK_IMPORTED_MODULE_18__[\"default\"].getState().getPreferencesForModule('browser');\n          let open_new_tab = browser_preferences.new_browser_tab_open;\n          const db_label = self.checkDbNameChange(data, dbNode, newTreeInfo);\n          let label = (0,_debugger_utils__WEBPACK_IMPORTED_MODULE_11__.getAppropriateLabel)(newTreeInfo);\n          sources_pgadmin__WEBPACK_IMPORTED_MODULE_19___default().Browser.Events.trigger('pgadmin:tool:show', `${_browser_static_js_constants__WEBPACK_IMPORTED_MODULE_16__.BROWSER_PANELS.DEBUGGER_TOOL}_${trans_id}`, url, null, {\n            title: (0,_debugger_utils__WEBPACK_IMPORTED_MODULE_11__.getDebuggerTitle)(browser_preferences, label, newTreeInfo.schema.label, db_label, null, self.pgBrowser),\n            icon: 'fa fa-bug',\n            manualClose: false,\n            renamable: true\n          }, Boolean(open_new_tab?.includes('debugger')));\n        }).catch(function (e) {\n          sources_pgadmin__WEBPACK_IMPORTED_MODULE_19___default().Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugger Target Initialization Error'), e.responseJSON.errormsg);\n        });\n      }\n    }).catch(err => {\n      sources_pgadmin__WEBPACK_IMPORTED_MODULE_19___default().Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugger Error'), err.response.data.errormsg);\n    });\n  }\n  checkFuncDebuggable(args, item) {\n    let [t, i, d, node] = this.getTreeNodeData(item);\n    let self = this;\n    if (!d) return;\n    let treeInfo = t.getTreeNodeHierarchy(i),\n      _url = this.generate_url('init', treeInfo, node);\n    self.api({\n      url: _url,\n      cache: false\n    }).then(function (res) {\n      self.startGlobalDebugger(args, item, res.data.data.trans_id);\n    }).catch(function (xhr) {\n      self.onFail(xhr);\n    });\n  }\n  getGlobalUrl(d, treeInfo, trans_id) {\n    let baseUrl = null;\n    if (d._type == 'function' || d._type == 'edbfunc') {\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_6___default()('debugger.initialize_target_for_function', {\n        'debug_type': 'indirect',\n        'trans_id': trans_id,\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': (0,_debugger_utils__WEBPACK_IMPORTED_MODULE_11__.getFunctionId)(treeInfo)\n      });\n    } else if (d._type == 'procedure' || d._type == 'edbproc') {\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_6___default()('debugger.initialize_target_for_function', {\n        'debug_type': 'indirect',\n        'trans_id': trans_id,\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': (0,_debugger_utils__WEBPACK_IMPORTED_MODULE_11__.getProcedureId)(treeInfo)\n      });\n    } else if (d._type == 'trigger_function') {\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_6___default()('debugger.initialize_target_for_function', {\n        'debug_type': 'indirect',\n        'trans_id': trans_id,\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': treeInfo.trigger_function._id\n      });\n    } else if (d._type == 'trigger' && 'table' in treeInfo) {\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_6___default()('debugger.initialize_target_for_trigger', {\n        'debug_type': 'indirect',\n        'trans_id': trans_id,\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': treeInfo.table._id,\n        'tri_id': treeInfo.trigger._id\n      });\n    } else if (d._type == 'trigger' && 'view' in treeInfo) {\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_6___default()('debugger.initialize_target_for_trigger', {\n        'debug_type': 'indirect',\n        'trans_id': trans_id,\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': treeInfo.view._id,\n        'tri_id': treeInfo.trigger._id\n      });\n    }\n    return baseUrl;\n  }\n  updatedDbLabel(res, db_label, treeInfo, dbNode) {\n    if (res.data.data.data_obj.db_name != treeInfo.database.label) {\n      db_label = res.data.data.data_obj.db_name;\n      let message = sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()(`Current database has been moved or renamed to ${db_label}. Click on the OK button to refresh the database name.`);\n      (0,tools_sqleditor_static_js_sqleditor_title__WEBPACK_IMPORTED_MODULE_9__.refresh_db_node)(message, dbNode);\n    }\n  }\n\n  //Callback function when user start the indirect debugging ( Listen to another session to invoke the target )\n  startGlobalDebugger(args, item, trans_id) {\n    // Initialize the target and create asynchronous connection and unique transaction ID\n    let self = this;\n    let t = this.pgBrowser.tree,\n      i = item || t.selected(),\n      d = i ? t.itemData(i) : undefined,\n      tree_data = this.pgBrowser.tree.translateTreeNodeIdFromReactTree(i),\n      db_data = this.pgBrowser.tree.findNode(tree_data[3]),\n      dbNode = db_data.domNode;\n    if (!d) return;\n    let treeInfo = t.getTreeNodeHierarchy(i);\n    let baseUrl = self.getGlobalUrl(d, treeInfo, trans_id);\n    self.api({\n      url: baseUrl,\n      method: 'POST'\n    }).then(function (res) {\n      let url = sources_url_for__WEBPACK_IMPORTED_MODULE_6___default()('debugger.direct', {\n        'trans_id': res.data.data.debuggerTransId\n      });\n      let browser_preferences = _preferences_static_js_store__WEBPACK_IMPORTED_MODULE_18__[\"default\"].getState().getPreferencesForModule('browser');\n      let open_new_tab = browser_preferences.new_browser_tab_open;\n      const db_label = treeInfo.database.label;\n      self.updatedDbLabel(res, db_label, treeInfo, dbNode);\n      let label = (0,_debugger_utils__WEBPACK_IMPORTED_MODULE_11__.getAppropriateLabel)(treeInfo);\n      sources_pgadmin__WEBPACK_IMPORTED_MODULE_19___default().Browser.Events.trigger('pgadmin:tool:show', `${_browser_static_js_constants__WEBPACK_IMPORTED_MODULE_16__.BROWSER_PANELS.DEBUGGER_TOOL}_${res.data.data.debuggerTransId}`, url, null, {\n        title: (0,_debugger_utils__WEBPACK_IMPORTED_MODULE_11__.getDebuggerTitle)(browser_preferences, label, db_label, db_label, null, self.pgBrowser),\n        icon: 'fa fa-bug',\n        manualClose: false,\n        renamable: true\n      }, Boolean(open_new_tab?.includes('debugger')));\n    }).catch(self.raiseError);\n  }\n  raiseError(xhr) {\n    try {\n      let err = xhr.response.data;\n      if (err.errormsg.search('Ticket expired') !== -1) {\n        let fetchTicket = Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'pgadmin.authenticate.kerberos'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())();\n        fetchTicket.then(function () {\n          self.startGlobalDebugger();\n        }, function (error) {\n          sources_pgadmin__WEBPACK_IMPORTED_MODULE_19___default().Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugger Error'), error);\n        });\n      } else if (err.success == 0) {\n        sources_pgadmin__WEBPACK_IMPORTED_MODULE_19___default().Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugger Error'), err.errormsg);\n      }\n    } catch (e) {\n      console.warn(e.stack || e);\n    }\n  }\n\n  /* We should get the transaction id from the server during initialization here */\n  async load(container, trans_id, debug_type, function_name_with_arguments, layout) {\n    this.trans_id = trans_id;\n    this.debug_type = debug_type;\n    this.first_time_indirect_debug = false;\n    this.direct_execution_completed = false;\n    this.polling_timeout_idle = false;\n    this.debug_restarted = false;\n    this.is_user_aborted_debugging = false;\n    this.is_polling_required = true; // Flag to stop unwanted ajax calls\n    this.function_name_with_arguments = function_name_with_arguments;\n    this.layout = layout;\n    let selectedNodeInfo = sources_window__WEBPACK_IMPORTED_MODULE_7__[\"default\"].pgAdmin.Browser.tree.getTreeNodeHierarchy(sources_window__WEBPACK_IMPORTED_MODULE_7__[\"default\"].pgAdmin.Browser.tree.selected());\n    await (0,_preferences_static_js_store__WEBPACK_IMPORTED_MODULE_18__.listenPreferenceBroadcast)();\n    const root = react_dom_client__WEBPACK_IMPORTED_MODULE_3__.createRoot(container);\n    root.render(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_static_js_Theme__WEBPACK_IMPORTED_MODULE_15__[\"default\"], null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_static_js_PgAdminProvider__WEBPACK_IMPORTED_MODULE_20__.PgAdminProvider, {\n      value: (sources_pgadmin__WEBPACK_IMPORTED_MODULE_19___default())\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_static_js_helpers_ModalProvider__WEBPACK_IMPORTED_MODULE_13__[\"default\"], null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_static_js_helpers_Notifier__WEBPACK_IMPORTED_MODULE_17__.NotifierProvider, {\n      pgAdmin: (sources_pgadmin__WEBPACK_IMPORTED_MODULE_19___default()),\n      pgWindow: sources_window__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\n    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_components_DebuggerComponent__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n      pgAdmin: sources_window__WEBPACK_IMPORTED_MODULE_7__[\"default\"].pgAdmin,\n      selectedNodeInfo: selectedNodeInfo,\n      panelId: `${_browser_static_js_constants__WEBPACK_IMPORTED_MODULE_16__.BROWSER_PANELS.DEBUGGER_TOOL}_${this.trans_id}`,\n      panelDocker: sources_window__WEBPACK_IMPORTED_MODULE_7__[\"default\"].pgAdmin.Browser.docker.default_workspace,\n      layout: layout,\n      params: {\n        transId: trans_id,\n        directDebugger: this,\n        funcArgsInstance: this.funcArgs\n      }\n    })))));\n  }\n  onFail(xhr) {\n    try {\n      let err = xhr.response.data;\n      if (err.success == 0) {\n        sources_pgadmin__WEBPACK_IMPORTED_MODULE_19___default().Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_4___default()('Debugger Error'), err.errormsg);\n      }\n    } catch (e) {\n      console.warn(e.stack || e);\n    }\n  }\n}\n(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(DebuggerModule, \"instance\", void 0);\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/DebuggerModule.js?");

/***/ }),

/***/ "./pgadmin/tools/debugger/static/js/components/DebuggerArgs.ui.js":
/*!************************************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/components/DebuggerArgs.ui.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DebuggerArgumentSchema: () => (/* binding */ DebuggerArgumentSchema)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sources/gettext */ \"./pgadmin/static/js/gettext.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sources_gettext__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var sources_SchemaView_base_schema_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sources/SchemaView/base_schema.ui */ \"./pgadmin/static/js/SchemaView/base_schema.ui.js\");\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n/////////////////////////////////////////////////////////////\n//\n// pgAdmin 4 - PostgreSQL Tools\n//\n// Copyright (C) 2013 - 2025, The pgAdmin Development Team\n// This software is released under the PostgreSQL Licence\n//\n//////////////////////////////////////////////////////////////\n\n\n\nclass ArgementsCollectionSchema extends sources_SchemaView_base_schema_ui__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  constructor() {\n    super({\n      name: undefined,\n      type: undefined,\n      is_null: false,\n      expr: false,\n      value: undefined,\n      use_default: false,\n      default_value: undefined,\n      isArrayType: false,\n      isValid: true\n    });\n  }\n  get baseFields() {\n    return [{\n      id: 'name',\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('Name'),\n      editable: false,\n      type: 'text',\n      cell: ''\n    }, {\n      id: 'type',\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('Type'),\n      editable: false,\n      type: 'text',\n      cell: '',\n      width: 30\n    }, {\n      id: 'is_null',\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('Null?'),\n      type: 'checkbox',\n      cell: 'checkbox',\n      width: 38,\n      align_center: true\n    }, {\n      id: 'expr',\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('Expression?'),\n      type: 'checkbox',\n      cell: 'checkbox',\n      width: 60,\n      align_center: true\n    }, {\n      id: 'value',\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('Value'),\n      type: 'text',\n      cell: state => {\n        let dtype = '';\n        state.isArrayType = false;\n        if (state.type.indexOf('[]') != -1) {\n          state.isArrayType = true;\n          dtype = 'text';\n        } else {\n          switch (state.type) {\n            case 'boolean':\n              dtype = 'checkbox';\n              break;\n            case 'integer':\n            case 'smallint':\n            case 'bigint':\n            case 'serial':\n            case 'smallserial':\n            case 'bigserial':\n            case 'oid':\n            case 'cid':\n            case 'xid':\n            case 'tid':\n              dtype = 'int';\n              break;\n            case 'real':\n            case 'numeric':\n            case 'double precision':\n            case 'decimal':\n              dtype = 'numeric';\n              break;\n            case 'string':\n              dtype = 'text';\n              break;\n            case 'date':\n              dtype = 'datetimepicker';\n              break;\n            default:\n              dtype = 'text';\n          }\n        }\n        return {\n          cell: dtype,\n          controlProps: _objectSpread({}, dtype == 'datetimepicker' && {\n            placeholder: sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('YYYY-MM-DD'),\n            autoOk: true,\n            pickerType: 'Date',\n            ampm: false\n          })\n        };\n      },\n      editable: true,\n      align_center: true,\n      disabled: state => state.use_default\n    }, {\n      id: 'use_default',\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('Use Default?'),\n      type: 'checkbox',\n      cell: 'checkbox',\n      width: 62,\n      disabled: state => state.disable_use_default\n    }, {\n      id: 'default_value',\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('Default'),\n      type: 'text',\n      editable: false,\n      cell: ''\n    }];\n  }\n  isValidArray(val) {\n    val = val?.trim();\n    return !(val != '' && (val.charAt(0) != '{' || val.charAt(val.length - 1) != '}'));\n  }\n  validate(state, setError) {\n    if (state.isArrayType && state.value && state.value != '') {\n      let isValid = this.isValidArray(state.value);\n      state.isValid = isValid;\n      if (isValid) {\n        setError('value', null);\n      } else {\n        setError('value', 'Arrays must start with \"{\" and end with \"}\"');\n        return true;\n      }\n    } else {\n      state.isValid = true;\n    }\n    return false;\n  }\n}\nclass DebuggerArgumentSchema extends sources_SchemaView_base_schema_ui__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  constructor() {\n    super();\n  }\n  get baseFields() {\n    return [{\n      id: 'aregsCollection',\n      label: sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()(''),\n      mode: ['edit'],\n      type: 'collection',\n      canAdd: false,\n      canDelete: false,\n      canEdit: false,\n      editable: false,\n      disabled: false,\n      schema: new ArgementsCollectionSchema()\n    }];\n  }\n}\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/components/DebuggerArgs.ui.js?");

/***/ }),

/***/ "./pgadmin/tools/debugger/static/js/components/DebuggerArgumentComponent.jsx":
/*!***********************************************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/components/DebuggerArgumentComponent.jsx ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DebuggerArgumentComponent)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ \"./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @mui/material/styles */ \"./node_modules/@mui/material/styles/styled.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mui_icons_material_DeleteSweep__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @mui/icons-material/DeleteSweep */ \"./node_modules/@mui/icons-material/esm/DeleteSweep.js\");\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @mui/material */ \"./node_modules/@mui/material/Box/Box.js\");\n/* harmony import */ var _mui_icons_material_BugReportRounded__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @mui/icons-material/BugReportRounded */ \"./node_modules/@mui/icons-material/esm/BugReportRounded.js\");\n/* harmony import */ var _mui_icons_material_CloseSharp__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @mui/icons-material/CloseSharp */ \"./node_modules/@mui/icons-material/esm/CloseSharp.js\");\n/* harmony import */ var sources_url_for__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sources/url_for */ \"./pgadmin/static/js/url_for.js\");\n/* harmony import */ var sources_url_for__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sources_url_for__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! sources/gettext */ \"./pgadmin/static/js/gettext.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sources_gettext__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var sources_pgadmin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sources/pgadmin */ \"./pgadmin/static/js/pgadmin.js\");\n/* harmony import */ var sources_pgadmin__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(sources_pgadmin__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var sources_components_Loader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sources/components/Loader */ \"./pgadmin/static/js/components/Loader.jsx\");\n/* harmony import */ var _static_js_SchemaView__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../static/js/SchemaView */ \"./pgadmin/static/js/SchemaView/index.jsx\");\n/* harmony import */ var _static_js_api_instance__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../static/js/api_instance */ \"./pgadmin/static/js/api_instance.js\");\n/* harmony import */ var _static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../static/js/components/Buttons */ \"./pgadmin/static/js/components/Buttons.jsx\");\n/* harmony import */ var _debugger_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../debugger_utils */ \"./pgadmin/tools/debugger/static/js/debugger_utils.js\");\n/* harmony import */ var _DebuggerArgs_ui__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./DebuggerArgs.ui */ \"./pgadmin/tools/debugger/static/js/components/DebuggerArgs.ui.js\");\n/* harmony import */ var _DebuggerConstants__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../DebuggerConstants */ \"./pgadmin/tools/debugger/static/js/DebuggerConstants.js\");\n/* harmony import */ var _browser_static_js_constants__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../browser/static/js/constants */ \"./pgadmin/browser/static/js/constants.js\");\n/* harmony import */ var _preferences_static_js_store__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../preferences/static/js/store */ \"./pgadmin/preferences/static/js/store.js\");\n\nconst _excluded = [\"debuggerInfo\", \"restartDebug\", \"isEdbProc\", \"transId\", \"pgTreeInfo\", \"pgData\"];\n/////////////////////////////////////////////////////////////\n//\n// pgAdmin 4 - PostgreSQL Tools\n//\n// Copyright (C) 2013 - 2025, The pgAdmin Development Team\n// This software is released under the PostgreSQL Licence\n//\n//////////////////////////////////////////////////////////////\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst StyledBox = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(_mui_material__WEBPACK_IMPORTED_MODULE_15__[\"default\"])(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    height: '100%',\n    backgroundColor: theme.palette.background.default,\n    overflow: 'hidden',\n    '& .DebuggerArgument-body': {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      minHeight: 0,\n      '& .DebuggerArgument-schema': {\n        padding: 0 + ' !important',\n        backgroundColor: theme.palette.background.default\n      }\n    },\n    '& .DebuggerArgument-footer': {\n      borderTop: `1px solid ${theme.otherVars.inputBorderColor} !important`,\n      padding: '0.5rem',\n      display: 'flex',\n      width: '100%',\n      background: theme.otherVars.headerBg,\n      '& .DebuggerArgument-actionBtn': {\n        alignItems: 'flex-start',\n        '& .DebuggerArgument-buttonMargin': {\n          marginLeft: '0.5em'\n        },\n        '& .DebuggerArgument-debugBtn': {\n          fontSize: '1.12rem !important'\n        }\n      }\n    }\n  };\n});\nfunction DebuggerArgumentComponent(_ref2) {\n  let {\n      debuggerInfo,\n      restartDebug,\n      isEdbProc,\n      transId,\n      pgTreeInfo,\n      pgData\n    } = _ref2,\n    props = (0,_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, _excluded);\n  const debuggerArgsSchema = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new _DebuggerArgs_ui__WEBPACK_IMPORTED_MODULE_10__.DebuggerArgumentSchema());\n  const api = (0,_static_js_api_instance__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n  const debuggerArgsData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n  const [loadArgs, setLoadArgs] = react__WEBPACK_IMPORTED_MODULE_1___default().useState(0);\n  const [isDisableDebug, setIsDisableDebug] = react__WEBPACK_IMPORTED_MODULE_1___default().useState(true);\n  const [loaderText, setLoaderText] = react__WEBPACK_IMPORTED_MODULE_1___default().useState('');\n  const debuggerFinalArgs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n  const InputArgIds = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n  const browserPreferences = (0,_preferences_static_js_store__WEBPACK_IMPORTED_MODULE_13__[\"default\"])().getPreferencesForModule('browser');\n  function getURL() {\n    let _Url = null;\n    if (restartDebug == 0) {\n      if (!pgData) return;\n      let treeInfo = pgTreeInfo;\n      if (pgData._type == 'function') {\n        // Get the existing function parameters available from sqlite database\n        _Url = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.get_arguments', {\n          'sid': treeInfo.server._id,\n          'did': treeInfo.database._id,\n          'scid': treeInfo.schema._id,\n          'func_id': treeInfo.function._id\n        });\n      } else if (pgData._type == 'procedure') {\n        // Get the existing function parameters available from sqlite database\n        _Url = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.get_arguments', {\n          'sid': treeInfo.server._id,\n          'did': treeInfo.database._id,\n          'scid': treeInfo.schema._id,\n          'func_id': treeInfo.procedure._id\n        });\n      } else if (pgData._type == 'edbfunc') {\n        // Get the existing function parameters available from sqlite database\n        _Url = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.get_arguments', {\n          'sid': treeInfo.server._id,\n          'did': treeInfo.database._id,\n          'scid': treeInfo.schema._id,\n          'func_id': treeInfo.edbfunc._id\n        });\n      } else if (pgData._type == 'edbproc') {\n        // Get the existing function parameters available from sqlite database\n        _Url = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.get_arguments', {\n          'sid': treeInfo.server._id,\n          'did': treeInfo.database._id,\n          'scid': treeInfo.schema._id,\n          'func_id': treeInfo.edbproc._id\n        });\n      }\n    } else {\n      // Get the existing function parameters available from sqlite database\n      _Url = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.get_arguments', {\n        'sid': debuggerInfo.server_id,\n        'did': debuggerInfo.database_id,\n        'scid': debuggerInfo.schema_id,\n        'func_id': debuggerInfo.function_id\n      });\n    }\n    return _Url;\n  }\n  function setArgs(res) {\n    let funcArgsData = [];\n    if (res.data.data.args_count != 0) {\n      setIsDisableDebug(false);\n      for (const i of res.data.data.result) {\n        // Below will format the data to be stored in sqlite database\n        funcArgsData.push({\n          'arg_id': i['arg_id'],\n          'is_null': i['is_null'],\n          'is_expression': i['is_expression'],\n          'use_default': i['use_default'],\n          'value': i['value']\n        });\n      }\n    }\n    return funcArgsData;\n  }\n  function checkModesAndTypes() {\n    // Check modes and type in the arguments.\n    if (debuggerInfo['proargmodes'] != null) {\n      let argmodes = debuggerInfo['proargmodes'].split(',');\n      argmodes.forEach((NULL, indx) => {\n        if (argmodes[indx] == 'i' || argmodes[indx] == 'b' || isEdbProc && argmodes[indx] == 'o') {\n          InputArgIds.current.push(indx);\n        }\n      });\n    } else {\n      let argtypes = debuggerInfo['proargtypenames'].split(',');\n      argtypes.forEach((NULL, indx) => {\n        InputArgIds.current.push(indx);\n      });\n    }\n\n    // Get argument types\n    let argType = debuggerInfo['proargtypenames'].split(',');\n    let argMode, defaultArgs, argCnt;\n    if (debuggerInfo['proargmodes'] != null) {\n      argMode = debuggerInfo['proargmodes'].split(',');\n    }\n    if (debuggerInfo['pronargdefaults']) {\n      let defaultArgsCount = debuggerInfo['pronargdefaults'];\n      defaultArgs = debuggerInfo['proargdefaults'].split(',');\n      argCnt = defaultArgsCount;\n    }\n    return [argType, argMode, argCnt, defaultArgs];\n  }\n  function setDefaultValues(defValList, argCnt, argName, argMode, defaultArgs) {\n    for (let j = argName.length - 1; j >= 0; j--) {\n      if (debuggerInfo['proargmodes'] != null) {\n        if (argMode && (argMode[j] == 'i' || argMode[j] == 'b' || isEdbProc && argMode[j] == 'o')) {\n          defValList[j] = _DebuggerConstants__WEBPACK_IMPORTED_MODULE_11__.DEBUGGER_ARGS.NO_DEFAULT;\n          if (argCnt) {\n            argCnt = argCnt - 1;\n            defValList[j] = defaultArgs[argCnt];\n          }\n        }\n      } else if (argCnt) {\n        argCnt = argCnt - 1;\n        defValList[j] = defaultArgs[argCnt];\n      } else {\n        defValList[j] = _DebuggerConstants__WEBPACK_IMPORTED_MODULE_11__.DEBUGGER_ARGS.NO_DEFAULT;\n      }\n    }\n  }\n  function addArg(argtype, defvalList, argname, useDefValue) {\n    let myObj = {};\n    if (defvalList != _DebuggerConstants__WEBPACK_IMPORTED_MODULE_11__.DEBUGGER_ARGS.NO_DEFAULT) {\n      useDefValue = true;\n    }\n    myObj = {\n      'name': argname,\n      'type': argtype,\n      'use_default': useDefValue,\n      'default_value': defvalList,\n      'disable_use_default': defvalList == _DebuggerConstants__WEBPACK_IMPORTED_MODULE_11__.DEBUGGER_ARGS.NO_DEFAULT\n    };\n    return myObj;\n  }\n  function getArgsList(argType, argMode, defValList, argName, useDefValue) {\n    let myObj = [];\n    if (argType.length != 0) {\n      for (let i = 0; i < argType.length; i++) {\n        if (debuggerInfo['proargmodes'] != null) {\n          if (argMode && (argMode[i] == 'i' || argMode[i] == 'b' || isEdbProc && argMode[i] == 'o')) {\n            useDefValue = false;\n            myObj.push(addArg(argType[i], defValList[i], argName[i], useDefValue));\n          }\n        } else {\n          useDefValue = false;\n          myObj.push(addArg(argType[i], defValList[i], argName[i], useDefValue));\n        }\n      }\n    }\n    return myObj;\n  }\n  function getFormattedArgsValues(argType, index, argData) {\n    let values = [];\n    if (argType[index].indexOf('[]') != -1 && argData['value'].length > 0) {\n      values = `{${argData['value']}}`;\n    } else {\n      values = argData['value'];\n    }\n    return values;\n  }\n  function setFuncObj(funcArgsData, argMode, argType, argName, defValList) {\n    let isUnnamedParam = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    let index,\n      values,\n      funcObj = [];\n    for (const argData of funcArgsData) {\n      index = argData['arg_id'];\n      if (debuggerInfo['proargmodes'] != null && argMode && argMode[index] == 'o' && !isEdbProc && !isUnnamedParam) {\n        continue;\n      }\n      // Get formated values for argument.\n      values = getFormattedArgsValues(argType, index, argData);\n      funcObj.push({\n        'name': argName[index],\n        'type': argType[index],\n        'is_null': argData['is_null'],\n        'expr': argData['is_expression'],\n        'value': values,\n        'use_default': argData['use_default'],\n        'default_value': defValList[index],\n        'disable_use_default': isUnnamedParam ? defValList[index] == _DebuggerConstants__WEBPACK_IMPORTED_MODULE_11__.DEBUGGER_ARGS.NO_DEFAULT_VALUE : defValList[index] == _DebuggerConstants__WEBPACK_IMPORTED_MODULE_11__.DEBUGGER_ARGS.NO_DEFAULT\n      });\n    }\n    return funcObj;\n  }\n  function setUnnamedParamNonDefVal(argType, defValList, myargname) {\n    let myObj = [];\n    for (let i = 0; i < argType.length; i++) {\n      myObj.push({\n        'name': myargname[i],\n        'type': argType[i],\n        'use_default': false,\n        'default_value': _DebuggerConstants__WEBPACK_IMPORTED_MODULE_11__.DEBUGGER_ARGS.NO_DEFAULT_VALUE,\n        'disable_use_default': true\n      });\n      defValList[i] = _DebuggerConstants__WEBPACK_IMPORTED_MODULE_11__.DEBUGGER_ARGS.NO_DEFAULT_VALUE;\n    }\n    return myObj;\n  }\n  function setUnnamedParamDefVal(myargname, argCnt, defValList, defaultArgs) {\n    for (let j = myargname.length - 1; j >= 0; j--) {\n      if (argCnt) {\n        argCnt = argCnt - 1;\n        defValList[j] = defaultArgs[argCnt];\n      } else {\n        defValList[j] = _DebuggerConstants__WEBPACK_IMPORTED_MODULE_11__.DEBUGGER_ARGS.NO_DEFAULT_VALUE;\n      }\n    }\n  }\n  function checkIsDefault(defValList) {\n    let useDefValue = false;\n    if (defValList != _DebuggerConstants__WEBPACK_IMPORTED_MODULE_11__.DEBUGGER_ARGS.NO_DEFAULT_VALUE) {\n      useDefValue = true;\n    }\n    return useDefValue;\n  }\n  function setUnnamedArgs(argType, argMode, useDefValue, defValList, myargname) {\n    let myObj = [];\n    for (let i = 0; i < argType.length; i++) {\n      let useDefValue = checkIsDefault(defValList[i]);\n      if (debuggerInfo['proargmodes'] == null || argMode?.[i] == 'i' || argMode?.[i] == 'b' || isEdbProc && argMode?.[i] == 'o') {\n        myObj.push({\n          'name': myargname[i],\n          'type': argType[i],\n          'use_default': useDefValue,\n          'default_value': defValList[i],\n          'disable_use_default': defValList[i] == _DebuggerConstants__WEBPACK_IMPORTED_MODULE_11__.DEBUGGER_ARGS.NO_DEFAULT_VALUE\n        });\n      }\n    }\n    return myObj;\n  }\n  function generateArgsNames(argType) {\n    let myargname = [];\n    for (let i = 0; i < argType.length; i++) {\n      myargname[i] = 'dbgparam' + (i + 1);\n    }\n    return myargname;\n  }\n  function setDebuggerArgs(funcArgsData, funcObj, myObj) {\n    // Ensure unchecked boolean checkboxes are set to false.\n    const setBooleanDefaults = dataArray => {\n      dataArray.forEach(data => {\n        if (data.type === 'boolean' && (data.value === undefined || data.value === '' || data.value === '0')) {\n          data.value = false;\n        }\n      });\n    };\n    // Check if the arguments already available in the sqlite database\n    // then we should use the existing arguments\n    let initVal = {\n      'aregsCollection': []\n    };\n    if (funcArgsData.length == 0) {\n      setBooleanDefaults(myObj);\n      initVal = {\n        'aregsCollection': myObj\n      };\n      debuggerArgsData.current = initVal;\n    } else {\n      setBooleanDefaults(funcObj);\n      initVal = {\n        'aregsCollection': funcObj\n      };\n      debuggerArgsData.current = initVal;\n    }\n  }\n  function getDebuggerArgsSchema() {\n    // Variables to store the data sent from sqlite database\n    let funcArgsData = [];\n\n    // As we are not getting Browser.tree when we debug again\n    // so tree info will be updated from the server data\n    let baseURL = getURL();\n    api({\n      url: baseURL,\n      method: 'GET'\n    }).then(function (res) {\n      funcArgsData = setArgs(res);\n      let argName;\n      let defValList = [];\n      let myObj = [];\n      let funcObj = [];\n      let [argType, argMode, argCnt, defaultArgs] = checkModesAndTypes();\n      let useDefValue;\n      if (debuggerInfo['proargnames'] != null) {\n        argName = debuggerInfo['proargnames'].split(',');\n\n        // It will assign default values to \"Default value\" column\n        setDefaultValues(defValList, argCnt, argName, argMode, defaultArgs);\n        // It wil check and add args in myObj list.\n        myObj = getArgsList(argType, argMode, defValList, argName, useDefValue);\n\n        // Need to update the funcObj variable from sqlite database if available\n        if (funcArgsData.length != 0) {\n          funcObj = setFuncObj(funcArgsData, argMode, argType, argName, defValList);\n        }\n      } else {\n        /* Generate the name parameter if function do not have arguments name\r\n        like dbgparam1, dbgparam2 etc. */\n        let myargname = generateArgsNames(argType);\n\n        // If there is no default arguments\n        if (!debuggerInfo['pronargdefaults']) {\n          myObj = setUnnamedParamNonDefVal(argType, defValList, myargname);\n        } else {\n          // If there is default arguments\n          //Below logic will assign default values to \"Default value\" column\n          setUnnamedParamDefVal(myargname, argCnt, defValList, defaultArgs);\n          myObj = setUnnamedArgs(argType, argMode, useDefValue, defValList, myargname);\n        }\n\n        // Need to update the funcObj variable from sqlite database if available\n        if (funcArgsData.length != 0) {\n          funcObj = setFuncObj(funcArgsData, argMode, argType, myargname, defValList, true);\n        }\n      }\n      setDebuggerArgs(funcArgsData, funcObj, myObj);\n      debuggerArgsSchema.current = new _DebuggerArgs_ui__WEBPACK_IMPORTED_MODULE_10__.DebuggerArgumentSchema();\n      setLoadArgs(crypto.getRandomValues(new Uint16Array(1)));\n    }).catch(() => {\n      sources_pgadmin__WEBPACK_IMPORTED_MODULE_4___default().Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_3___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_3___default()('Unable to fetch the arguments from server'));\n    });\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    getDebuggerArgsSchema();\n  }, []);\n  let initData = () => new Promise((resolve, reject) => {\n    try {\n      resolve(debuggerArgsData.current);\n    } catch (error) {\n      reject(error instanceof Error ? error : Error(sources_gettext__WEBPACK_IMPORTED_MODULE_3___default()('Something went wrong')));\n    }\n  });\n  function clearArgs() {\n    setLoaderText('Loading...');\n    setLoadArgs(0);\n    let base_url = null;\n    if (restartDebug == 0) {\n      if (!pgData) return;\n      let treeInfo = pgTreeInfo;\n      base_url = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.clear_arguments', {\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': pgData._id\n      });\n    } else {\n      base_url = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.clear_arguments', {\n        'sid': debuggerInfo.server_id,\n        'did': debuggerInfo.database_id,\n        'scid': debuggerInfo.schema_id,\n        'func_id': debuggerInfo.function_id\n      });\n    }\n    api({\n      url: base_url,\n      method: 'POST',\n      data: {}\n    }).then(function () {\n      /* Get updated debugger arguments */\n      getDebuggerArgsSchema();\n      /* setTimeout required to get updated argruments as 'Clear All' will delete all saved arguments form sqlite db. */\n      setTimeout(() => {\n        /* Reload the debugger arguments */\n        setLoaderText('');\n        setLoadArgs(crypto.getRandomValues(new Uint16Array(1)));\n        /* Disable debug button */\n        setIsDisableDebug(true);\n      }, 100);\n    }).catch(function (er) {\n      setLoaderText('');\n      sources_pgadmin__WEBPACK_IMPORTED_MODULE_4___default().Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_3___default()('Clear failed'), er.responseJSON.errormsg);\n    });\n  }\n  function setDebuggingArgs(argsList, argSet) {\n    if (argsList.length === 0) {\n      // Add all parameters\n      debuggerArgsData.current.aregsCollection.forEach(arg => {\n        if (!argSet.includes(arg.name)) {\n          argSet.push(arg.name);\n          argsList.push(arg);\n        }\n      });\n\n      // Update values if any change in the args.\n      if (debuggerFinalArgs.current) {\n        debuggerFinalArgs.current.changed.forEach(changedArg => {\n          argsList.forEach((el, _index) => {\n            if (changedArg.name == el.name) {\n              argsList[_index] = changedArg;\n            }\n          });\n        });\n      }\n    }\n  }\n  function checkArgsVal(arg, argsValueList) {\n    // Check if value is set to NULL then we should ignore the value field\n    if (arg.is_null) {\n      argsValueList.push({\n        'name': arg.name,\n        'type': arg.type,\n        'value': 'NULL'\n      });\n    } else if (arg.use_default) {\n      // Check if default value to be used or not\n      argsValueList.push({\n        'name': arg.name,\n        'type': arg.type,\n        'value': arg.default_value\n      });\n    } else {\n      argsValueList.push({\n        'name': arg.name,\n        'type': arg.type,\n        'value': arg.value\n      });\n    }\n  }\n  function getFunctionID(d, treeInfo) {\n    let functionId;\n    if (d._type == 'function') {\n      functionId = treeInfo.function._id;\n    } else if (d._type == 'procedure') {\n      functionId = treeInfo.procedure._id;\n    } else if (d._type == 'edbfunc') {\n      functionId = treeInfo.edbfunc._id;\n    } else if (d._type == 'edbproc') {\n      functionId = treeInfo.edbproc._id;\n    }\n    return functionId;\n  }\n  function setSqliteFuncArgs(d, treeInfo, arg, intCount, sqliteFuncArgsList) {\n    if (restartDebug == 0) {\n      let functionId = getFunctionID(d, treeInfo);\n      // Below will format the data to be stored in sqlite database\n      sqliteFuncArgsList.push({\n        'server_id': treeInfo.server._id,\n        'database_id': treeInfo.database._id,\n        'schema_id': treeInfo.schema._id,\n        'function_id': functionId,\n        'arg_id': InputArgIds.current[intCount],\n        'is_null': arg.is_null ? 1 : 0,\n        'is_expression': arg.expr ? 1 : 0,\n        'use_default': arg.use_default ? 1 : 0,\n        'value': arg.value,\n        'is_array_value': arg?.isArrayType\n      });\n    } else {\n      // Below will format the data to be stored in sqlite database\n      sqliteFuncArgsList.push({\n        'server_id': debuggerInfo.server_id,\n        'database_id': debuggerInfo.database_id,\n        'schema_id': debuggerInfo.schema_id,\n        'function_id': debuggerInfo.function_id,\n        'arg_id': InputArgIds.current[intCount],\n        'is_null': arg.is_null ? 1 : 0,\n        'is_expression': arg.expr ? 1 : 0,\n        'use_default': arg.use_default ? 1 : 0,\n        'value': arg.value,\n        'is_array_value': arg?.isArrayType\n      });\n    }\n    return sqliteFuncArgsList;\n  }\n  function checkTypeAndGetUrl(d, treeInfo) {\n    let baseUrl;\n    if (d?._type == 'function') {\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.initialize_target_for_function', {\n        'debug_type': 'direct',\n        'trans_id': transId,\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': treeInfo.function._id\n      });\n    } else if (d?._type == 'procedure') {\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.initialize_target_for_function', {\n        'debug_type': 'direct',\n        'trans_id': transId,\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': treeInfo.procedure._id\n      });\n    } else if (d?._type == 'edbfunc') {\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.initialize_target_for_function', {\n        'debug_type': 'direct',\n        'trans_id': transId,\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': treeInfo.edbfunc._id\n      });\n    } else if (d?._type == 'edbproc') {\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.initialize_target_for_function', {\n        'debug_type': 'direct',\n        'trans_id': transId,\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': treeInfo.edbproc._id\n      });\n    }\n    return baseUrl;\n  }\n  function getSetArgsUrl(d, treeInfo) {\n    let baseUrl;\n    if (d._type == 'function') {\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.set_arguments', {\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': treeInfo.function._id\n      });\n    } else if (d._type == 'procedure') {\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.set_arguments', {\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': treeInfo.procedure._id\n      });\n    } else if (d._type == 'edbfunc') {\n      // Get the existing function parameters available from sqlite database\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.set_arguments', {\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': treeInfo.edbfunc._id\n      });\n    } else if (d._type == 'edbproc') {\n      // Get the existing function parameters available from sqlite database\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.set_arguments', {\n        'sid': treeInfo.server._id,\n        'did': treeInfo.database._id,\n        'scid': treeInfo.schema._id,\n        'func_id': treeInfo.edbproc._id\n      });\n    }\n    return baseUrl;\n  }\n  function startDebugging() {\n    setLoaderText('Starting debugger...');\n    try {\n      /* Initialize the target once the debug button is clicked and create asynchronous connection\r\n        and unique transaction ID If the debugging is started again then treeInfo is already stored. */\n      let treeInfo = pgTreeInfo;\n      if (!pgData) return;\n      let argsValueList = [];\n      let sqliteFuncArgsList = [];\n      let intCount = 0;\n      let argsList = [];\n      let argSet = [];\n      setDebuggingArgs(argsList, argSet);\n      argsList.forEach(arg => {\n        checkArgsVal(arg, argsValueList);\n        setSqliteFuncArgs(pgData, treeInfo, arg, intCount, sqliteFuncArgsList);\n        intCount = intCount + 1;\n      });\n      let baseUrl;\n\n      /* If debugging is not started again then we should initialize the target otherwise not */\n      if (restartDebug == 0) {\n        baseUrl = checkTypeAndGetUrl(pgData, treeInfo);\n        api({\n          url: baseUrl,\n          method: 'POST',\n          data: JSON.stringify(argsValueList)\n        }).then(function (res_post) {\n          let url = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.direct', {\n            'trans_id': res_post.data.data.debuggerTransId\n          });\n          let open_new_tab = browserPreferences.new_browser_tab_open;\n          let label = (0,_debugger_utils__WEBPACK_IMPORTED_MODULE_9__.getAppropriateLabel)(treeInfo);\n          sources_pgadmin__WEBPACK_IMPORTED_MODULE_4___default().Browser.Events.trigger('pgadmin:tool:show', `${_browser_static_js_constants__WEBPACK_IMPORTED_MODULE_12__.BROWSER_PANELS.DEBUGGER_TOOL}_${res_post.data.data.debuggerTransId}`, url, null, {\n            title: (0,_debugger_utils__WEBPACK_IMPORTED_MODULE_9__.getDebuggerTitle)(browserPreferences, label, treeInfo.schema.label, treeInfo.database.label, null, (sources_pgadmin__WEBPACK_IMPORTED_MODULE_4___default().Browser)),\n            icon: 'fa fa-bug',\n            manualClose: false,\n            renamable: true\n          }, Boolean(open_new_tab?.includes('debugger')));\n          let _url = getSetArgsUrl(pgData, treeInfo);\n          api({\n            url: _url,\n            method: 'POST',\n            data: JSON.stringify(sqliteFuncArgsList)\n          }).then(function () {/*This is intentional (SonarQube)*/}).catch(error => {\n            setLoaderText('');\n            sources_pgadmin__WEBPACK_IMPORTED_MODULE_4___default().Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_3___default()('Error occurred: '), (0,_static_js_api_instance__WEBPACK_IMPORTED_MODULE_7__.parseApiError)(error));\n          });\n          /* Close the debugger modal dialog */\n          props.closeModal();\n          setLoaderText('');\n        }).catch(function (error) {\n          setLoaderText('');\n          sources_pgadmin__WEBPACK_IMPORTED_MODULE_4___default().Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_3___default()('Debugger Target Initialization Error'), (0,_static_js_api_instance__WEBPACK_IMPORTED_MODULE_7__.parseApiError)(error));\n        });\n      } else {\n        // If the debugging is started again then we should only set the\n        // arguments and start the listener again\n        baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.start_listener', {\n          'trans_id': transId\n        });\n        api({\n          url: baseUrl,\n          method: 'POST',\n          data: JSON.stringify(argsValueList)\n        }).catch(function (error) {\n          props.closeModal();\n          sources_pgadmin__WEBPACK_IMPORTED_MODULE_4___default().Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_3___default()('Debugger Listener Startup Error'), (0,_static_js_api_instance__WEBPACK_IMPORTED_MODULE_7__.parseApiError)(error));\n        });\n        setLoaderText('');\n        // Set the new input arguments given by the user during debugging\n        let _Url = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.set_arguments', {\n          'sid': debuggerInfo.server_id,\n          'did': debuggerInfo.database_id,\n          'scid': debuggerInfo.schema_id,\n          'func_id': debuggerInfo.function_id\n        });\n        api({\n          url: _Url,\n          method: 'POST',\n          data: JSON.stringify(sqliteFuncArgsList)\n        }).then(function () {\n          /*This is intentional (SonarQube)*/\n          props.closeModal();\n        }).catch(function (error) {\n          setLoaderText('');\n          sources_pgadmin__WEBPACK_IMPORTED_MODULE_4___default().Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_3___default()('Debugger Listener Startup Set Arguments Error'), (0,_static_js_api_instance__WEBPACK_IMPORTED_MODULE_7__.parseApiError)(error));\n        });\n      }\n    } catch (err) {\n      setLoaderText('');\n      sources_pgadmin__WEBPACK_IMPORTED_MODULE_4___default().Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_3___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_3___default()(err.message));\n    }\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(StyledBox, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_material__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n    className: \"DebuggerArgument-body\"\n  }, loadArgs > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(sources_components_Loader__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n    message: loaderText\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_SchemaView__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    formType: 'dialog',\n    getInitData: initData,\n    viewHelperProps: {\n      mode: 'edit'\n    },\n    schema: debuggerArgsSchema.current,\n    showFooter: false,\n    isTabView: false,\n    Notifier: (sources_pgadmin__WEBPACK_IMPORTED_MODULE_4___default().Browser).notifier,\n    formClassName: \"DebuggerArgument-schema\",\n    onDataChange: (isChanged, changedData) => {\n      let isValid = false;\n      let skipStep = false;\n      if ('sessData' in debuggerArgsSchema.current) {\n        isValid = true;\n        debuggerArgsSchema.current.sessData.aregsCollection.forEach(data => {\n          if (skipStep) {\n            return;\n          }\n          if ((data.is_null || data.use_default || data?.value?.toString()?.length > 0) && isValid) {\n            isValid = true;\n          } else {\n            isValid = false;\n            skipStep = true;\n          }\n          if (!data.isValid) {\n            isValid = false;\n            skipStep = true;\n          }\n        });\n      }\n      setIsDisableDebug(!isValid);\n      debuggerFinalArgs.current = changedData.aregsCollection;\n    }\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_material__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n    className: \"DebuggerArgument-footer\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_material__WEBPACK_IMPORTED_MODULE_15__[\"default\"], null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_8__.DefaultButton, {\n    className: \"DebuggerArgument-buttonMargin\",\n    onClick: () => {\n      clearArgs();\n    },\n    startIcon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_icons_material_DeleteSweep__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n      onClick: () => {\n        clearArgs();\n      }\n    })\n  }, sources_gettext__WEBPACK_IMPORTED_MODULE_3___default()('Clear All'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_material__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n    className: \"DebuggerArgument-actionBtn\",\n    marginLeft: \"auto\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_8__.DefaultButton, {\n    className: \"DebuggerArgument-buttonMargin\",\n    onClick: () => {\n      props.closeModal();\n    },\n    startIcon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_icons_material_CloseSharp__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n      onClick: () => {\n        props.closeModal();\n      }\n    })\n  }, sources_gettext__WEBPACK_IMPORTED_MODULE_3___default()('Cancel')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_8__.PrimaryButton, {\n    className: \"DebuggerArgument-buttonMargin\",\n    startIcon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_icons_material_BugReportRounded__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n      className: \"DebuggerArgument-debugBtn\"\n    }),\n    disabled: isDisableDebug,\n    onClick: () => {\n      startDebugging();\n    }\n  }, sources_gettext__WEBPACK_IMPORTED_MODULE_3___default()('Debug')))));\n}\nDebuggerArgumentComponent.propTypes = {\n  debuggerInfo: (prop_types__WEBPACK_IMPORTED_MODULE_19___default().object),\n  restartDebug: (prop_types__WEBPACK_IMPORTED_MODULE_19___default().number),\n  isEdbProc: (prop_types__WEBPACK_IMPORTED_MODULE_19___default().bool),\n  transId: (prop_types__WEBPACK_IMPORTED_MODULE_19___default().string),\n  closeModal: (prop_types__WEBPACK_IMPORTED_MODULE_19___default().func),\n  pgTreeInfo: (prop_types__WEBPACK_IMPORTED_MODULE_19___default().object),\n  pgData: (prop_types__WEBPACK_IMPORTED_MODULE_19___default().object)\n};\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/components/DebuggerArgumentComponent.jsx?");

/***/ }),

/***/ "./pgadmin/tools/debugger/static/js/components/DebuggerComponent.jsx":
/*!***************************************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/components/DebuggerComponent.jsx ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DebuggerContext: () => (/* binding */ DebuggerContext),\n/* harmony export */   DebuggerEventsContext: () => (/* binding */ DebuggerEventsContext),\n/* harmony export */   \"default\": () => (/* binding */ DebuggerComponent)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @mui/material */ \"./node_modules/@mui/material/Box/Box.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sources/gettext */ \"./pgadmin/static/js/gettext.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sources_gettext__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var sources_url_for__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! sources/url_for */ \"./pgadmin/static/js/url_for.js\");\n/* harmony import */ var sources_url_for__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sources_url_for__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var sources_components_Loader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sources/components/Loader */ \"./pgadmin/static/js/components/Loader.jsx\");\n/* harmony import */ var _static_js_helpers_Layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../static/js/helpers/Layout */ \"./pgadmin/static/js/helpers/Layout/index.jsx\");\n/* harmony import */ var _static_js_helpers_EventBus__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../static/js/helpers/EventBus */ \"./pgadmin/static/js/helpers/EventBus.js\");\n/* harmony import */ var _static_js_api_instance__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../static/js/api_instance */ \"./pgadmin/static/js/api_instance.js\");\n/* harmony import */ var _DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../DebuggerConstants */ \"./pgadmin/tools/debugger/static/js/DebuggerConstants.js\");\n/* harmony import */ var _sqleditor_static_js_show_view_data__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../sqleditor/static/js/show_view_data */ \"./pgadmin/tools/sqleditor/static/js/show_view_data.js\");\n/* harmony import */ var _static_js_helpers_ModalProvider__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../static/js/helpers/ModalProvider */ \"./pgadmin/static/js/helpers/ModalProvider.jsx\");\n/* harmony import */ var _DebuggerEditor__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./DebuggerEditor */ \"./pgadmin/tools/debugger/static/js/components/DebuggerEditor.jsx\");\n/* harmony import */ var _DebuggerMessages__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./DebuggerMessages */ \"./pgadmin/tools/debugger/static/js/components/DebuggerMessages.jsx\");\n/* harmony import */ var _ToolBar__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ToolBar */ \"./pgadmin/tools/debugger/static/js/components/ToolBar.jsx\");\n/* harmony import */ var _Stack__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Stack */ \"./pgadmin/tools/debugger/static/js/components/Stack.jsx\");\n/* harmony import */ var _Results__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Results */ \"./pgadmin/tools/debugger/static/js/components/Results.jsx\");\n/* harmony import */ var _LocalVariablesAndParams__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./LocalVariablesAndParams */ \"./pgadmin/tools/debugger/static/js/components/LocalVariablesAndParams.jsx\");\n/* harmony import */ var _DebuggerArgumentComponent__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./DebuggerArgumentComponent */ \"./pgadmin/tools/debugger/static/js/components/DebuggerArgumentComponent.jsx\");\n/* harmony import */ var _preferences_static_js_store__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../../preferences/static/js/store */ \"./pgadmin/preferences/static/js/store.js\");\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n/////////////////////////////////////////////////////////////\n//\n// pgAdmin 4 - PostgreSQL Tools\n//\n// Copyright (C) 2013 - 2025, The pgAdmin Development Team\n// This software is released under the PostgreSQL Licence\n//\n//////////////////////////////////////////////////////////////\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst DebuggerContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createContext();\nconst DebuggerEventsContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createContext();\nfunction DebuggerComponent(_ref) {\n  let {\n    pgAdmin,\n    selectedNodeInfo,\n    panelId,\n    panelDocker,\n    eventBusObj,\n    layout,\n    params\n  } = _ref;\n  const savedLayout = layout;\n  const containerRef = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(null);\n  const docker = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  const api = (0,_static_js_api_instance__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n  const modal = (0,_static_js_helpers_ModalProvider__WEBPACK_IMPORTED_MODULE_10__.useModal)();\n  const eventBus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(eventBusObj || new _static_js_helpers_EventBus__WEBPACK_IMPORTED_MODULE_6__[\"default\"]());\n  const [loaderText, setLoaderText] = react__WEBPACK_IMPORTED_MODULE_1___default().useState('');\n  const editor = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  const preferencesStore = (0,_preferences_static_js_store__WEBPACK_IMPORTED_MODULE_18__[\"default\"])();\n  let timeOut = null;\n  const [preferences, setPreferences] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n    browser: preferencesStore.getPreferencesForModule('browser'),\n    debugger: preferencesStore.getPreferencesForModule('debugger')\n  });\n  const disableToolbarButtons = () => {\n    eventBus.current.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.DISABLE_MENU);\n    eventBus.current.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.GET_TOOL_BAR_BUTTON_STATUS, {\n      disabled: true\n    });\n  };\n  const enableToolbarButtons = function () {\n    let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    if (key) {\n      eventBus.current.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.ENABLE_SPECIFIC_MENU, key);\n    } else {\n      eventBus.current.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.ENABLE_MENU);\n    }\n    eventBus.current.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.GET_TOOL_BAR_BUTTON_STATUS, {\n      disabled: false\n    });\n  };\n\n  // Function to get the breakpoint information from the server\n  const getBreakpointInformation = (transId, callBackFunc) => {\n    let result = '';\n\n    // Make ajax call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.execute_query', {\n      'trans_id': transId,\n      'query_type': 'get_breakpoints'\n    });\n    api({\n      url: baseUrl,\n      method: 'GET'\n    }).then(function (res) {\n      if (res.data.data.status === 'Success') {\n        result = res.data.data.result;\n        if (callBackFunc) {\n          callBackFunc(result);\n        }\n      } else if (res.data.data.status === 'NotConnected') {\n        raiseFetchingBreakpointError();\n      }\n    }).catch(raiseFetchingBreakpointError);\n    return result;\n  };\n  const clearAllBreakpoint = transId => {\n    let clearBreakpoint = br_list => {\n      // If there is no break point to clear then we should return from here.\n      if (br_list.length == 1 && br_list[0].linenumber == -1) return;\n      disableToolbarButtons();\n      let breakpoint_list = getBreakpointList(br_list);\n\n      // Make ajax call to listen the database message\n      let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.clear_all_breakpoint', {\n        'trans_id': transId\n      });\n      api({\n        url: baseUrl,\n        method: 'POST',\n        data: {\n          'breakpoint_list': breakpoint_list.length > 0 ? breakpoint_list.join() : null\n        }\n      }).then(function (res) {\n        if (res.data.data.status) {\n          executeQuery(transId);\n          editor.current.clearBreakpoints();\n        }\n        enableToolbarButtons();\n      }).catch(raiseClearBrekpointError);\n    };\n    getBreakpointInformation(transId, clearBreakpoint);\n  };\n  const raiseJSONError = xhr => {\n    try {\n      let err = xhr.response.data;\n      if (err.success == 0) {\n        let header_msg = sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'),\n          err_msg = err.errormsg;\n\n        // Stopped Debugger forcefully. 57014 is the SQL State\n        if (err.errormsg.indexOf('57014') !== -1) {\n          header_msg = sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Aborted');\n          err_msg = sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger has been aborted. ' + 'On clicking the ok button, debugger panel will be closed.');\n        }\n        pgAdmin.Browser.notifier.alert(header_msg, err_msg, () => {\n          if (panelId) {\n            panelDocker.close(panelId, true);\n          }\n        });\n      }\n    } catch {\n      alert(xhr);\n      pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while starting debugging listener.'));\n    }\n  };\n  const raisePollingError = error => {\n    console.error(error);\n    pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while polling result.'));\n  };\n  const raiseClearBrekpointError = () => {\n    pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while clearing all breakpoint.'));\n  };\n  const raiseFetchingBreakpointError = () => {\n    pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while fetching breakpoint information.'));\n  };\n  const messages = transId => {\n    // Make ajax call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.messages', {\n      'trans_id': transId\n    });\n    api({\n      url: baseUrl,\n      method: 'GET'\n    }).then(function (res) {\n      if (res.data.data.status === 'Success') {\n        enableToolbarButtons();\n        // If status is Success then find the port number to attach the executer.\n        startExecution(transId, res.data.data.result);\n      } else if (res.data.data.status === 'Busy') {\n        // If status is Busy then poll the result by recursive call to the poll function\n        messages(transId);\n      } else if (res.data.data.status === 'NotConnected') {\n        pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Not connected to server or connection with the server has been closed.'), res.data.result);\n      }\n    }).catch(function () {\n      pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while fetching messages information.'));\n    });\n  };\n  const startExecution = (transId, port_num) => {\n    // Make ajax call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.start_execution', {\n      'trans_id': transId,\n      'port_num': port_num\n    });\n    api({\n      url: baseUrl,\n      method: 'GET'\n    }).then(function (res) {\n      if (res.data.data.status === 'Success') {\n        // If status is Success then find the port number to attach the executer.\n        executeQuery(transId);\n      } else if (res.data.data.status === 'NotConnected') {\n        pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while starting debugging session.'));\n      }\n    }).catch(function () {\n      pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while starting debugging session.'));\n    });\n  };\n  const executeQuery = transId => {\n    // Make ajax call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.execute_query', {\n      'trans_id': transId,\n      'query_type': 'wait_for_breakpoint'\n    });\n    api({\n      url: baseUrl,\n      method: 'GET'\n    }).then(function (res) {\n      if (res.data.data.status === 'Success') {\n        // set the return code to the code editor text area\n        if (res.data.data.result[0].src != null && res.data.data.result[0].linenumber != null) {\n          editor.current.setValue(res.data.data.result[0].src);\n          editor.current.setActiveLine(res.data.data.result[0].linenumber - 1);\n        }\n        // Call function to create and update Stack information ....\n        getStackInformation(transId);\n        if (params.directDebugger.debug_type) {\n          pollEndExecutionResult(transId);\n        }\n      } else if (res.data.data.status === 'NotConnected') {\n        pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while executing requested debugging information.'));\n      }\n    }).catch(function (error) {\n      console.error(error);\n      pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while executing requested debugging information.'));\n    });\n  };\n  const selectFrame = frameId => {\n    // Make ajax call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.select_frame', {\n      'trans_id': params.transId,\n      'frame_id': frameId\n    });\n    api({\n      url: baseUrl,\n      method: 'GET'\n    }).then(function (res) {\n      if (res.data.data.status) {\n        editor.current.setValue(res.data.data.result[0].src);\n        updateBreakpoint(params.transId, true);\n        editor.current.setActiveLine(res.data.data.result[0].linenumber - 1);\n      }\n    }).catch(function () {\n      pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while selecting frame.'));\n    });\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    let baseUrl = '';\n    if (params.transId != undefined && !params.directDebugger.debug_type) {\n      // Make ajax call to execute the and start the target for execution\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.start_listener', {\n        'trans_id': params.transId\n      });\n      api({\n        url: baseUrl,\n        method: 'POST'\n      }).catch(raiseJSONError);\n      enableToolbarButtons();\n      pollResult(params.transId);\n    } else if (params.transId != undefined) {\n      // Make api call to execute the and start the target for execution\n      baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.start_listener', {\n        'trans_id': params.transId\n      });\n      api({\n        url: baseUrl,\n        method: 'POST'\n      }).catch(raiseJSONError);\n      messages(params.transId);\n    }\n    const closeConn = () => {\n      /* Using fetch with keepalive as the browser may\r\n      cancel the axios request on tab close. keepalive will\r\n      make sure the request is completed */\n      (0,_static_js_api_instance__WEBPACK_IMPORTED_MODULE_7__.callFetch)(sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.close', {\n        'trans_id': params.transId\n      }), {\n        keepalive: true,\n        method: 'DELETE'\n      }).then(() => {/* Success */}).catch(err => console.error(err));\n    };\n    window.addEventListener('unload', closeConn);\n    return () => {\n      window.removeEventListener('unload', closeConn);\n    };\n  }, []);\n  const triggerClearBreakpoint = () => {\n    let clearBreakpoint = br_list => {\n      // If there is no break point to clear then we should return from here.\n      if (br_list.length == 1 && br_list[0].linenumber == -1) return;\n      disableToolbarButtons();\n      let breakpoint_list = getBreakpointList(br_list);\n\n      // Make ajax call to listen the database message\n      let _baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.clear_all_breakpoint', {\n        'trans_id': params.transId\n      });\n      api({\n        url: _baseUrl,\n        method: 'POST',\n        data: {\n          'breakpoint_list': breakpoint_list.join()\n        }\n      }).then(function () {\n        editor.current.clearBreakpoints();\n        enableToolbarButtons();\n      }).catch(raiseClearBrekpointError);\n    };\n    // Make ajax call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.execute_query', {\n      'trans_id': params.transId,\n      'query_type': 'get_breakpoints'\n    });\n    api({\n      url: baseUrl,\n      method: 'GET'\n    }).then(function (res) {\n      if (res.data.data.status === 'Success') {\n        let result = res.data.data.result;\n        clearBreakpoint(result);\n      } else if (res.data.data.status === 'NotConnected') {\n        raiseFetchingBreakpointError();\n      }\n    }).catch(raiseFetchingBreakpointError);\n  };\n  const triggerToggleBreakpoint = () => {\n    disableToolbarButtons();\n    const lineNo = editor.current.getActiveLine();\n    editor.current.toggleBreakpoint(lineNo);\n    enableToolbarButtons();\n  };\n  const stopDebugging = () => {\n    disableToolbarButtons();\n    // Make ajax call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.execute_query', {\n      'trans_id': params.transId,\n      'query_type': 'abort_target'\n    });\n    api({\n      url: baseUrl,\n      method: 'GET'\n    }).then(function (res) {\n      if (res.data.data.status) {\n        // Remove active time in the editor\n        editor.current.setActiveLine(-1);\n        // Clear timeout on stop debugger.\n        clearTimeout(timeOut);\n        params.directDebugger.direct_execution_completed = true;\n        params.directDebugger.is_user_aborted_debugging = true;\n\n        // Stop further pooling\n        params.directDebugger.is_polling_required = false;\n\n        // Restarting debugging in the same transaction do not work\n        // We will give same behaviour as pgAdmin3 and disable all buttons\n        disableToolbarButtons();\n\n        // Set the message to inform the user that execution\n        // is completed.\n        pgAdmin.Browser.notifier.success(res.data.info, 3000);\n      } else if (res.data.data.status === 'NotConnected') {\n        pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while executing stop in debugging session.'));\n      }\n    }).catch(function () {\n      pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while executing stop in debugging session.'));\n    });\n  };\n  const restart = transId => {\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.restart', {\n      'trans_id': transId\n    });\n    disableToolbarButtons();\n    api({\n      url: baseUrl\n    }).then(function (res) {\n      // Restart the same function debugging with previous arguments\n      let restart_dbg = res.data.data.restart_debug ? 1 : 0;\n\n      // Start pooling again\n      params.directDebugger.polling_timeout_idle = false;\n      params.directDebugger.is_polling_required = true;\n      pollResult(transId);\n      if (restart_dbg) {\n        params.directDebugger.debug_restarted = true;\n      }\n\n      /*\r\n      Need to check if restart debugging really require to open the input\r\n      dialog? If yes then we will get the previous arguments from database\r\n      and populate the input dialog, If no then we should directly start the\r\n      listener.\r\n      */\n      if (res.data.data.result.require_input) {\n        let t = pgAdmin.Browser.tree,\n          i = t.selected(),\n          d = i ? t.itemData(i) : undefined;\n        let treeInfo = t.getTreeNodeHierarchy(i);\n        if (d) {\n          let isEdbProc = d._type == 'edbproc';\n          modal.showModal(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger'), closeModal => {\n            return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_DebuggerArgumentComponent__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n              closeModal: closeModal,\n              debuggerInfo: res.data.data.result,\n              restartDebug: restart_dbg,\n              isEdbProc: isEdbProc,\n              transId: params.transId.toString(),\n              pgData: d,\n              pgTreeInfo: treeInfo\n            });\n          }, {\n            isFullScreen: false,\n            isResizeable: true,\n            showFullScreen: true,\n            isFullWidth: true,\n            dialogWidth: pgAdmin.Browser.stdW.md,\n            dialogHeight: pgAdmin.Browser.stdH.md\n          });\n        }\n      } else {\n        // This will start lister for void de\n        restartDebuggerListener();\n      }\n    }).catch(raiseJSONError);\n  };\n  function restartDebuggerListener() {\n    // Debugging of void function is started again so we need to start\n    // the listener again\n    let base_url = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.start_listener', {\n      'trans_id': params.transId\n    });\n    api({\n      url: base_url,\n      method: 'POST'\n    }).catch(raisePollingError);\n    if (params.directDebugger.debug_type) {\n      pollEndExecutionResult(params.transId);\n    }\n  }\n  const pollEndExecuteError = res => {\n    params.directDebugger.direct_execution_completed = true;\n    editor.current.setActiveLine(-1);\n\n    //Set the notification message to inform the user that execution is\n    // completed with error.\n    if (!params.directDebugger.is_user_aborted_debugging) {\n      pgAdmin.Browser.notifier.error(res.data.info, 3000);\n    }\n\n    // Update the message tab of the debugger\n    updateMessages(res.data.data.status_message);\n    eventBus.current.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.FOCUS_PANEL, _DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.PANELS.MESSAGES);\n    disableToolbarButtons();\n    // If debugging is stopped by user then do not enable\n    // continue/restart button\n    if (!params.directDebugger.is_user_aborted_debugging) {\n      enableToolbarButtons();\n      params.directDebugger.is_user_aborted_debugging = false;\n    }\n\n    // Stop further pooling\n    params.directDebugger.is_polling_required = false;\n  };\n  const updateResultAndMessages = res => {\n    if (res.data.data.result != null) {\n      editor.current.setActiveLine(-1);\n      // Call function to update results information and set result panel focus\n      eventBus.current.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.SET_RESULTS, res.data.data.col_info, res.data.data.result);\n      eventBus.current.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.FOCUS_PANEL, _DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.PANELS.RESULTS);\n      params.directDebugger.direct_execution_completed = true;\n      params.directDebugger.polling_timeout_idle = true;\n\n      //Set the message to inform the user that execution is completed.\n      pgAdmin.Browser.notifier.success(res.data.info, 3000);\n\n      // Update the message tab of the debugger\n      updateMessages(res.data.data.status_message);\n\n      // Execution completed so disable the buttons other than\n      // \"Continue/Start\" button because user can still\n      // start the same execution again.\n      disableToolbarButtons();\n      enableToolbarButtons(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.MENUS.START);\n\n      // Stop further pooling\n      params.directDebugger.is_polling_required = false;\n    }\n  };\n\n  /*\r\n    For the direct debugging, we need to check weather the functions execution\r\n    is completed or not. After completion of the debugging, we will stop polling\r\n    the result  until new execution starts.\r\n  */\n  const pollEndExecutionResult = transId => {\n    // Do we need to poll?\n    if (!params.directDebugger.is_polling_required) {\n      return;\n    }\n\n    // Make ajax call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.poll_end_execution_result', {\n        'trans_id': transId\n      }),\n      poll_end_timeout;\n\n    /*\r\n      * During the execution we should poll the result in minimum seconds\r\n      * but once the execution is completed and wait for the another\r\n      * debugging session then we should decrease the polling frequency.\r\n    */\n    if (params.directDebugger.polling_timeout_idle) {\n      // Poll the result to check that execution is completed or not\n      // after 1200 ms\n      poll_end_timeout = 1200;\n    } else {\n      // Poll the result to check that execution is completed or not\n      // after 350 ms\n      poll_end_timeout = 250;\n    }\n    timeOut = setTimeout(function () {\n      api({\n        url: baseUrl,\n        method: 'GET'\n      }).then(function (res) {\n        if (res.data.data.status === 'Success') {\n          if (res.data.data.result == undefined) {\n            /*\r\n            \"result\" is undefined only in case of EDB procedure.\r\n            As Once the EDB procedure execution is completed then we are\r\n            not getting any result so we need to ignore the result.\r\n            */\n            editor.current.setActiveLine(-1);\n            params.directDebugger.direct_execution_completed = true;\n            params.directDebugger.polling_timeout_idle = true;\n\n            //Set the message to inform the user that execution is completed.\n            pgAdmin.Browser.notifier.success(res.data.info, 3000);\n\n            // Update the message tab of the debugger\n            updateMessages(res.data.data.status_message);\n\n            // Execution completed so disable the buttons other than\n            // \"Continue/Start\" button because user can still\n            // start the same execution again.\n            disableToolbarButtons();\n            enableToolbarButtons(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.MENUS.START);\n\n            // Stop further polling\n            params.directDebugger.is_polling_required = false;\n          } else {\n            updateResultAndMessages(res);\n          }\n        } else if (res.data.data.status === 'Busy') {\n          // If status is Busy then poll the result by recursive call to\n          // the poll function\n          pollEndExecutionResult(transId);\n          // Update the message tab of the debugger\n          updateMessages(res.data.data.status_message);\n        } else if (res.data.status === 'NotConnected') {\n          pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger poll end execution error'), res.data.result);\n        } else if (res.data.data.status === 'ERROR') {\n          pollEndExecuteError(res);\n        }\n      }).catch(raisePollingError);\n    }, poll_end_timeout);\n  };\n\n  // This function will update messages tab\n  const updateMessages = msg => {\n    if (msg) {\n      // Call function to update messages information\n      eventBus.current.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.SET_MESSAGES, msg, true);\n    }\n  };\n  const continueDebugger = () => {\n    disableToolbarButtons();\n\n    //Check first if previous execution was completed or not\n    if (params.directDebugger.direct_execution_completed && params.directDebugger.direct_execution_completed == params.directDebugger.polling_timeout_idle) {\n      restart(params.transId);\n    } else {\n      // Make ajax call to listen the database message\n      let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.execute_query', {\n        'trans_id': params.transId,\n        'query_type': 'continue'\n      });\n      api({\n        url: baseUrl,\n        method: 'GET'\n      }).then(function (res) {\n        if (res.data.data.status) {\n          pollResult(params.transId);\n        } else {\n          pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while executing continue in debugging session.'));\n        }\n      }).catch(function () {\n        pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while executing continue in debugging session.'));\n      });\n    }\n  };\n  const stepOver = () => {\n    disableToolbarButtons();\n\n    // Make ajax call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.execute_query', {\n      'trans_id': params.transId,\n      'query_type': 'step_over'\n    });\n    api({\n      url: baseUrl,\n      method: 'GET'\n    }).then(function (res) {\n      if (res.data.data.status) {\n        pollResult(params.transId);\n      } else {\n        pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while executing step over in debugging session.'));\n      }\n    }).catch(function () {\n      pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while executing step over in debugging session.'));\n    });\n  };\n  const getBreakpointList = br_list => {\n    let breakpoint_list = [];\n    for (let val of br_list) {\n      if (val.linenumber != -1) {\n        breakpoint_list.push(val.linenumber);\n      }\n    }\n    return breakpoint_list;\n  };\n\n  // Function to get the latest breakpoint information\n  const updateBreakpoint = function (transId) {\n    let updateLocalVar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let callBackFunc = () => {\n      if (updateLocalVar) {\n        // Call function to create and update local variables ....\n        getLocalVariables(params.transId);\n      }\n    };\n    getBreakpointInformation(transId, callBackFunc);\n  };\n\n  // Get the local variable information of the functions and update the grid\n  const getLocalVariables = transId => {\n    // Make ajax call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.execute_query', {\n      'trans_id': transId,\n      'query_type': 'get_variables'\n    });\n    api({\n      url: baseUrl,\n      method: 'GET'\n    }).then(function (res) {\n      if (res.data.data.status === 'Success') {\n        // Call function to update local variables\n        let variablesResult = res.data.data.result.filter(lvar => {\n          return lvar.varclass == 'L';\n        });\n        eventBus.current.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.SET_LOCAL_VARIABLES, variablesResult);\n        let parametersResult = res.data.data.result.filter(lvar => {\n          return lvar.varclass == 'A';\n        });\n        // update Parameter panel data.\n        eventBus.current.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.SET_PARAMETERS, parametersResult);\n        // If debug function is restarted then again start listener to\n        // read the updated messages.\n        if (params.directDebugger.debug_restarted) {\n          if (params.directDebugger.debug_type) {\n            pollEndExecutionResult(transId);\n          }\n          params.directDebugger.debug_restarted = false;\n        }\n      } else if (res.data.data.status === 'NotConnected') {\n        pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while fetching variable information.'));\n      }\n    }).catch(function () {\n      pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while fetching variable information.'));\n    });\n  };\n  const getStackInformation = transId => {\n    // Make ajax call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.execute_query', {\n      'trans_id': transId,\n      'query_type': 'get_stack_info'\n    });\n    api({\n      url: baseUrl,\n      method: 'GET'\n    }).then(function (res) {\n      if (res.data.data.status === 'Success') {\n        // Call function to update stack information\n        eventBus.current.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.SET_STACK, res.data.data.result);\n        // Call function to create and update stack information\n        getLocalVariables(params.transId);\n      } else if (res.data.data.status === 'NotConnected') {\n        pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while fetching stack information.'));\n      }\n    }).catch(function () {\n      pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while fetching stack information.'));\n    });\n  };\n  const updateBreakpointInfo = (res, transId) => {\n    if (res.data.data.result[0].src != editor.current.getValue()) {\n      editor.current.setValue(res.data.data.result[0].src);\n      try {\n        updateBreakpoint(transId);\n      } catch (err) {\n        pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error in update'), err);\n      }\n    }\n  };\n  const updateInfo = (res, transId) => {\n    if (!params.directDebugger.debug_type && !params.directDebugger.first_time_indirect_debug) {\n      setLoaderText('');\n      editor.current.setActiveLine(-1);\n      clearAllBreakpoint(transId);\n      params.directDebugger.first_time_indirect_debug = true;\n      params.directDebugger.polling_timeout_idle = false;\n    } else {\n      params.directDebugger.polling_timeout_idle = false;\n      setLoaderText('');\n      // If the source is really changed then only update the breakpoint information\n      updateBreakpointInfo(res, transId);\n      editor.current.setActiveLine(res.data.data.result[0].linenumber - 1);\n      // Update the stack, local variables and parameters information\n      setTimeout(function () {\n        getStackInformation(transId);\n      }, 10);\n    }\n  };\n  const checkDebuggerStatus = transId => {\n    // If status is Busy then poll the result by recursive call to the poll function\n    if (!params.directDebugger.debug_type) {\n      setLoaderText(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Waiting for another session to invoke the target...'));\n      // As we are waiting for another session to invoke the target,disable all the buttons\n      disableToolbarButtons();\n      params.directDebugger.first_time_indirect_debug = false;\n      pollResult(transId);\n    } else {\n      pollResult(transId);\n    }\n  };\n\n  /* poll the actual result after user has executed the \"continue\", \"step-into\",\r\n    \"step-over\" actions and get the other updated information from the server.\r\n  */\n  const pollResult = transId => {\n    // Do we need to poll?\n    if (!params.directDebugger.is_polling_required) {\n      return;\n    }\n\n    // Make ajax call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.poll_result', {\n        'trans_id': transId\n      }),\n      poll_timeout;\n\n    /*\r\n          During the execution we should poll the result in minimum seconds but\r\n          once the execution is completed and wait for the another debugging\r\n          session then we should decrease the polling frequency.\r\n        */\n    if (params.directDebugger.polling_timeout_idle) {\n      // Poll the result after 1 second\n      poll_timeout = 1000;\n    } else {\n      // Poll the result after 200 ms\n      poll_timeout = 200;\n    }\n    setTimeout(function () {\n      api({\n        url: baseUrl,\n        method: 'GET',\n        beforeSend: function (xhr) {\n          xhr.setRequestHeader(pgAdmin.csrf_token_header, pgAdmin.csrf_token);\n        }\n      }).then(function (res) {\n        if (res.data.data.status === 'Success') {\n          // If no result then poll again to wait for results.\n          if (res.data.data.result == null || res.data.data.result.length == 0) {\n            pollResult(transId);\n          } else {\n            updateInfo(res, transId);\n            // Enable all the buttons as we got the results\n            enableToolbarButtons();\n          }\n        } else if (res.data.data.status === 'Busy') {\n          params.directDebugger.polling_timeout_idle = true;\n          checkDebuggerStatus(transId);\n        } else if (res.data.data.status === 'NotConnected') {\n          pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error: poll_result'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while polling result.'));\n        }\n      }).catch(raisePollingError);\n    }, poll_timeout);\n  };\n  const stepInto = () => {\n    disableToolbarButtons();\n    // Make ajax call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.execute_query', {\n      'trans_id': params.transId,\n      'query_type': 'step_into'\n    });\n    api({\n      url: baseUrl,\n      method: 'GET'\n    }).then(function (res) {\n      if (res.data.data.status) {\n        pollResult(params.transId);\n      } else {\n        pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while executing step into in debugging session.'));\n      }\n    }).catch(function () {\n      pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while executing step into in debugging session.'));\n    });\n  };\n  const onChangesLocalVarParameters = data => {\n    // Make api call to listen the database message\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('debugger.deposit_value', {\n      'trans_id': params.transId\n    });\n    api({\n      url: baseUrl,\n      method: 'POST',\n      data: data\n    }).then(function (res) {\n      if (res.data.data.status) {\n        // Get the updated variables value\n        getLocalVariables(params.transId);\n        // Show the message to the user that deposit value is success or failure\n        if (res.data.data.result) {\n          pgAdmin.Browser.notifier.success(res.data.data.info, 3000);\n        } else {\n          pgAdmin.Browser.notifier.error(res.data.data.info, 3000);\n        }\n      }\n    }).catch(function () {\n      pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Error while depositing variable value.'));\n    });\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    // Register all eventes for debugger.\n    eventBus.current.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.TRIGGER_CLEAR_ALL_BREAKPOINTS, triggerClearBreakpoint);\n    eventBus.current.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.TRIGGER_TOGGLE_BREAKPOINTS, triggerToggleBreakpoint);\n    eventBus.current.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.TRIGGER_STOP_DEBUGGING, stopDebugging);\n    eventBus.current.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.TRIGGER_CONTINUE_DEBUGGING, continueDebugger);\n    eventBus.current.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.TRIGGER_STEPOVER_DEBUGGING, stepOver);\n    eventBus.current.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.TRIGGER_STEINTO_DEBUGGING, stepInto);\n    eventBus.current.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.SET_LOCAL_VARIABLE_VALUE_CHANGE, onChangesLocalVarParameters);\n    eventBus.current.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.SET_PARAMETERS_VALUE_CHANGE, onChangesLocalVarParameters);\n    eventBus.current.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.SET_FRAME, frameId => {\n      selectFrame(frameId);\n    });\n    eventBus.current.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.FOCUS_PANEL, panelId => {\n      docker.current.focus(panelId);\n    });\n    eventBus.current.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.DEBUGGER_EVENTS.TRIGGER_RESET_LAYOUT, () => {\n      docker.current?.resetLayout();\n    });\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => _preferences_static_js_store__WEBPACK_IMPORTED_MODULE_18__[\"default\"].subscribe(state => {\n    setPreferences({\n      browser: state.getPreferencesForModule('browser'),\n      debugger: state.getPreferencesForModule('debugger')\n    });\n  }), []);\n  const DebuggerContextValue = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo(() => ({\n    docker: docker.current,\n    api: api,\n    modal: modal,\n    params: _objectSpread(_objectSpread({}, params), {}, {\n      node_name: (0,_sqleditor_static_js_show_view_data__WEBPACK_IMPORTED_MODULE_9__.retrieveNodeName)(selectedNodeInfo)\n    }),\n    preferences: preferences,\n    containerRef: containerRef\n  }), [preferences]);\n\n  // Define the debugger layout components such as DebuggerEditor to show queries and\n  let defaultLayout = {\n    dockbox: {\n      mode: 'vertical',\n      children: [{\n        mode: 'horizontal',\n        children: [{\n          tabs: [_static_js_helpers_Layout__WEBPACK_IMPORTED_MODULE_5__.LayoutDocker.getPanel({\n            id: _DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.PANELS.DEBUGGER,\n            title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Debugger'),\n            content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_DebuggerEditor__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n              getEditor: edRef => {\n                editor.current = edRef;\n              },\n              params: {\n                transId: params.transId,\n                debuggerDirect: params.directDebugger\n              }\n            })\n          })]\n        }]\n      }, {\n        mode: 'horizontal',\n        children: [{\n          tabs: [_static_js_helpers_Layout__WEBPACK_IMPORTED_MODULE_5__.LayoutDocker.getPanel({\n            id: _DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.PANELS.PARAMETERS,\n            title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Parameters'),\n            content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_LocalVariablesAndParams__WEBPACK_IMPORTED_MODULE_16__.LocalVariablesAndParams, {\n              type: 1\n            })\n          }), _static_js_helpers_Layout__WEBPACK_IMPORTED_MODULE_5__.LayoutDocker.getPanel({\n            id: _DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.PANELS.LOCAL_VARIABLES,\n            title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Local Variables'),\n            content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_LocalVariablesAndParams__WEBPACK_IMPORTED_MODULE_16__.LocalVariablesAndParams, {\n              type: 2\n            })\n          }), _static_js_helpers_Layout__WEBPACK_IMPORTED_MODULE_5__.LayoutDocker.getPanel({\n            id: _DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.PANELS.MESSAGES,\n            title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Messages'),\n            content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_DebuggerMessages__WEBPACK_IMPORTED_MODULE_12__[\"default\"], null)\n          }), _static_js_helpers_Layout__WEBPACK_IMPORTED_MODULE_5__.LayoutDocker.getPanel({\n            id: _DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.PANELS.RESULTS,\n            title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Result'),\n            content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Results__WEBPACK_IMPORTED_MODULE_15__.Results, null)\n          }), _static_js_helpers_Layout__WEBPACK_IMPORTED_MODULE_5__.LayoutDocker.getPanel({\n            id: _DebuggerConstants__WEBPACK_IMPORTED_MODULE_8__.PANELS.STACK,\n            title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Stack'),\n            content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Stack__WEBPACK_IMPORTED_MODULE_14__.Stack, null)\n          })]\n        }]\n      }]\n    }\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(DebuggerContext.Provider, {\n    value: DebuggerContextValue\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(DebuggerEventsContext.Provider, {\n    value: eventBus.current\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(sources_components_Loader__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    message: loaderText\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_material__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: \"1\",\n    tabIndex: \"0\",\n    ref: containerRef\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_ToolBar__WEBPACK_IMPORTED_MODULE_13__.ToolBar, {\n    containerRef: containerRef\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_helpers_Layout__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n    getLayoutInstance: obj => docker.current = obj,\n    defaultLayout: defaultLayout,\n    layoutId: \"Debugger/Layout\",\n    savedLayout: savedLayout\n  }))));\n}\nDebuggerComponent.propTypes = {\n  pgAdmin: (prop_types__WEBPACK_IMPORTED_MODULE_20___default().object),\n  selectedNodeInfo: (prop_types__WEBPACK_IMPORTED_MODULE_20___default().object),\n  panelId: (prop_types__WEBPACK_IMPORTED_MODULE_20___default().string),\n  panelDocker: (prop_types__WEBPACK_IMPORTED_MODULE_20___default().object),\n  eventBusObj: (prop_types__WEBPACK_IMPORTED_MODULE_20___default().object),\n  layout: (prop_types__WEBPACK_IMPORTED_MODULE_20___default().string),\n  params: (prop_types__WEBPACK_IMPORTED_MODULE_20___default().object)\n};\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/components/DebuggerComponent.jsx?");

/***/ }),

/***/ "./pgadmin/tools/debugger/static/js/components/DebuggerEditor.jsx":
/*!************************************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/components/DebuggerEditor.jsx ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DebuggerEditor)\n/* harmony export */ });\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/material/styles */ \"./node_modules/@mui/material/styles/styled.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sources/gettext */ \"./pgadmin/static/js/gettext.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sources_gettext__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var sources_url_for__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sources/url_for */ \"./pgadmin/static/js/url_for.js\");\n/* harmony import */ var sources_url_for__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sources_url_for__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _static_js_api_instance__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../static/js/api_instance */ \"./pgadmin/static/js/api_instance.js\");\n/* harmony import */ var _static_js_components_ReactCodeMirror__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../static/js/components/ReactCodeMirror */ \"./pgadmin/static/js/components/ReactCodeMirror/index.jsx\");\n/* harmony import */ var _DebuggerConstants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../DebuggerConstants */ \"./pgadmin/tools/debugger/static/js/DebuggerConstants.js\");\n/* harmony import */ var _DebuggerComponent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./DebuggerComponent */ \"./pgadmin/tools/debugger/static/js/components/DebuggerComponent.jsx\");\n/* harmony import */ var _static_js_PgAdminProvider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../static/js/PgAdminProvider */ \"./pgadmin/static/js/PgAdminProvider.jsx\");\n/* harmony import */ var _static_js_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../static/js/utils */ \"./pgadmin/static/js/utils.js\");\n/////////////////////////////////////////////////////////////\n//\n// pgAdmin 4 - PostgreSQL Tools\n//\n// Copyright (C) 2013 - 2025, The pgAdmin Development Team\n// This software is released under the PostgreSQL Licence\n//\n//////////////////////////////////////////////////////////////\n\n\n\n\n\n\n\n\n\n\n\n\nconst StyledCodeMirror = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(_static_js_components_ReactCodeMirror__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(() => ({\n  '&.Query-sql': {\n    height: '100%'\n  }\n}));\nfunction DebuggerEditor(_ref) {\n  let {\n    getEditor,\n    params\n  } = _ref;\n  const editor = react__WEBPACK_IMPORTED_MODULE_0___default().useRef();\n  const eventBus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_DebuggerComponent__WEBPACK_IMPORTED_MODULE_6__.DebuggerEventsContext);\n  const pgAdmin = (0,_static_js_PgAdminProvider__WEBPACK_IMPORTED_MODULE_7__.usePgAdmin)();\n  const debuggerCtx = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_DebuggerComponent__WEBPACK_IMPORTED_MODULE_6__.DebuggerContext);\n  let preferences = debuggerCtx.preferences.debugger;\n  const api = (0,_static_js_api_instance__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n  function setBreakpoint(lineNo, setType) {\n    // Make ajax call to set/clear the break point by user\n    let baseUrl = sources_url_for__WEBPACK_IMPORTED_MODULE_2___default()('debugger.set_breakpoint', {\n      'trans_id': params.transId,\n      'line_no': lineNo,\n      'set_type': setType\n    });\n    api({\n      url: baseUrl,\n      method: 'GET'\n    }).then(function (res) {\n      if (res.data.data.status) {\n        // Breakpoint has been set by the user\n      }\n    }).catch(function () {\n      pgAdmin.Browser.notifier.alert(sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('Debugger Error'), sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('Error while setting debugging breakpoint.'));\n    });\n  }\n  eventBus.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_5__.DEBUGGER_EVENTS.EDITOR_SET_SQL, function (value) {\n    let focus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    focus && editor.current?.focus();\n    editor.current?.setValue(value);\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    self = this;\n    getEditor(editor.current);\n  }, [editor.current]);\n  const shortcutOverrideKeys = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    // omit CM internal shortcuts\n    const debuggerShortcuts = Object.values(preferences).filter(p => (0,_static_js_utils__WEBPACK_IMPORTED_MODULE_8__.isShortcutValue)(p)).map(p => (0,_static_js_utils__WEBPACK_IMPORTED_MODULE_8__.parseShortcutValue)(p));\n    return [{\n      any: (_v, e) => {\n        const eventStr = (0,_static_js_utils__WEBPACK_IMPORTED_MODULE_8__.parseKeyEventValue)(e);\n        if (debuggerShortcuts.includes(eventStr)) {\n          debuggerCtx.containerRef?.current?.dispatchEvent(new KeyboardEvent('keydown', {\n            which: e.which,\n            keyCode: e.keyCode,\n            altKey: e.altKey,\n            shiftKey: e.shiftKey,\n            ctrlKey: e.ctrlKey,\n            metaKey: e.metaKey\n          }));\n          e.preventDefault();\n          e.stopPropagation();\n          return true;\n        }\n        return false;\n      }\n    }];\n  }, [preferences]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(StyledCodeMirror, {\n    currEditor: obj => {\n      editor.current = obj;\n    },\n    value: '',\n    onBreakPointChange: (line, on) => {\n      setBreakpoint(line, on ? 1 : 0);\n    },\n    className: \"Query-sql\",\n    readonly: true,\n    customKeyMap: shortcutOverrideKeys,\n    breakpoint: true\n  });\n}\nDebuggerEditor.propTypes = {\n  getEditor: (prop_types__WEBPACK_IMPORTED_MODULE_10___default().func),\n  params: (prop_types__WEBPACK_IMPORTED_MODULE_10___default().object)\n};\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/components/DebuggerEditor.jsx?");

/***/ }),

/***/ "./pgadmin/tools/debugger/static/js/components/DebuggerMessages.jsx":
/*!**************************************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/components/DebuggerMessages.jsx ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DebuggerMessages)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mui/material/styles */ \"./node_modules/@mui/material/styles/styled.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _DebuggerComponent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DebuggerComponent */ \"./pgadmin/tools/debugger/static/js/components/DebuggerComponent.jsx\");\n/* harmony import */ var _DebuggerConstants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../DebuggerConstants */ \"./pgadmin/tools/debugger/static/js/DebuggerConstants.js\");\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\nconst StyledDiv = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"])('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return _objectSpread({\n    whiteSpace: 'pre-wrap',\n    fontFamily: '\"Source Code Pro\", SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n    padding: '5px 10px',\n    overflow: 'auto',\n    height: '100%',\n    fontSize: '12px',\n    userSelect: 'text',\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.text.primary\n  }, theme.mixins.fontSourceCode);\n});\nfunction DebuggerMessages() {\n  const [messageText, setMessageText] = react__WEBPACK_IMPORTED_MODULE_1___default().useState('');\n  const eventBus = react__WEBPACK_IMPORTED_MODULE_1___default().useContext(_DebuggerComponent__WEBPACK_IMPORTED_MODULE_2__.DebuggerEventsContext);\n  react__WEBPACK_IMPORTED_MODULE_1___default().useEffect(() => {\n    eventBus.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_3__.DEBUGGER_EVENTS.SET_MESSAGES, function (text) {\n      let append = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      setMessageText(prev => {\n        if (append) {\n          return prev + text;\n        }\n        return text;\n      });\n    });\n  }, []);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(StyledDiv, {\n    tabIndex: \"0\",\n    id: \"debugger-msg\"\n  }, messageText);\n}\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/components/DebuggerMessages.jsx?");

/***/ }),

/***/ "./pgadmin/tools/debugger/static/js/components/LocalVariablesAndParams.jsx":
/*!*********************************************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/components/LocalVariablesAndParams.jsx ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalVariablesAndParams: () => (/* binding */ LocalVariablesAndParams)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/material/styles */ \"./node_modules/@mui/material/styles/styled.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mui_material_Paper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/material/Paper */ \"./node_modules/@mui/material/Paper/Paper.js\");\n/* harmony import */ var _mui_material_TableContainer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/material/TableContainer */ \"./node_modules/@mui/material/TableContainer/TableContainer.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sources/gettext */ \"./pgadmin/static/js/gettext.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sources_gettext__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _DebuggerComponent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DebuggerComponent */ \"./pgadmin/tools/debugger/static/js/components/DebuggerComponent.jsx\");\n/* harmony import */ var _DebuggerConstants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../DebuggerConstants */ \"./pgadmin/tools/debugger/static/js/DebuggerConstants.js\");\n/* harmony import */ var _static_js_components_FormComponents__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../static/js/components/FormComponents */ \"./pgadmin/static/js/components/FormComponents.jsx\");\n/* harmony import */ var _static_js_components_Table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../static/js/components/Table */ \"./pgadmin/static/js/components/Table.jsx\");\n/////////////////////////////////////////////////////////////\n//\n// pgAdmin 4 - PostgreSQL Tools\n//\n// Copyright (C) 2013 - 2025, The pgAdmin Development Team\n// This software is released under the PostgreSQL Licence\n//\n//////////////////////////////////////////////////////////////\n\n\n\n\n\n\n\n\n\n\n\n\nconst StyledPaper = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_mui_material_Paper__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(() => ({\n  flexGrow: 1,\n  minHeight: 0,\n  overflow: 'auto',\n  maxHeight: '100%',\n  '& .LocalVariablesAndParams-container': {\n    maxHeight: '100%',\n    '& .LocalVariablesAndParams-cell': {\n      textAlign: 'center'\n    }\n  }\n}));\nfunction LocalVariablesAndParams(_ref) {\n  let {\n    type\n  } = _ref;\n  const eventBus = react__WEBPACK_IMPORTED_MODULE_1___default().useContext(_DebuggerComponent__WEBPACK_IMPORTED_MODULE_3__.DebuggerEventsContext);\n  const [variablesData, setVariablesData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n  const preValue = react__WEBPACK_IMPORTED_MODULE_1___default().useRef({});\n  const [disableVarChange, setDisableVarChange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  react__WEBPACK_IMPORTED_MODULE_1___default().useEffect(() => {\n    /* For Parameters and Local variables use the component.\r\n        type = 1 means 'Parameters'\r\n        type = 2 means 'LocalVariables'\r\n    */\n    if (type == 1) {\n      eventBus.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_4__.DEBUGGER_EVENTS.SET_PARAMETERS, val => {\n        setVariablesData(val);\n      });\n    } else if (type == 2) {\n      eventBus.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_4__.DEBUGGER_EVENTS.SET_LOCAL_VARIABLES, val => {\n        setVariablesData(val);\n      });\n    }\n    eventBus.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_4__.DEBUGGER_EVENTS.GET_TOOL_BAR_BUTTON_STATUS, status => {\n      setDisableVarChange(status.disabled);\n    });\n  }, []);\n  const changeLocalVarVal = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(data => {\n    if (type == 1) {\n      eventBus.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_4__.DEBUGGER_EVENTS.SET_PARAMETERS_VALUE_CHANGE, data);\n    } else if (type == 2) {\n      eventBus.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_4__.DEBUGGER_EVENTS.SET_LOCAL_VARIABLE_VALUE_CHANGE, data);\n    }\n  });\n  const onValueChange = (name, value) => {\n    setVariablesData(prev => {\n      let retVal = [...prev];\n      let nameIndex = lodash__WEBPACK_IMPORTED_MODULE_0___default().findIndex(retVal, r => r.name == name);\n      retVal[nameIndex].value = value;\n      return retVal;\n    });\n  };\n  const handelBlurEvent = row => {\n    let data = [{\n      name: row.name,\n      value: row.value,\n      type: row.type\n    }];\n    if (preValue.current[row.name] != row.value && !disableVarChange) {\n      preValue.current[row.name] = row.value;\n      changeLocalVarVal(data);\n    }\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(StyledPaper, {\n    variant: \"outlined\",\n    elevation: 0\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_material_TableContainer__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    className: \"LocalVariablesAndParams-container\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Table__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    \"aria-label\": \"sticky table\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"thead\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"tr\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"th\", null, sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Name')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"th\", null, sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Type')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"th\", null, sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Value')))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"tbody\", null, variablesData.map(row => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"tr\", {\n    key: row.name\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"td\", null, row.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"td\", null, row.dtype), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"td\", null, row.dtype == 'date' ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_FormComponents__WEBPACK_IMPORTED_MODULE_5__.InputDateTimePicker, {\n    value: row.value,\n    controlProps: {\n      placeholder: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('YYYY-MM-DD'),\n      autoOk: true,\n      pickerType: 'Date',\n      ampm: false\n    },\n    onChange: val => {\n      onValueChange(row.name, val);\n    },\n    onFocus: () => {\n      preValue.current[row.name] = row.value;\n    },\n    onBlur: () => {\n      handelBlurEvent(row);\n    }\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_FormComponents__WEBPACK_IMPORTED_MODULE_5__.InputText, {\n    value: row.value,\n    type: row.dtype,\n    disabled: disableVarChange,\n    onChange: val => {\n      onValueChange(row.name, val);\n    },\n    onFocus: () => {\n      preValue.current[row.name] = row.value;\n    },\n    onBlur: () => {\n      handelBlurEvent(row);\n    }\n  })))), variablesData.length == 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"tr\", {\n    key: lodash__WEBPACK_IMPORTED_MODULE_0___default().uniqueId('c'),\n    className: \"LocalVariablesAndParams-cell\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"td\", {\n    colSpan: 3\n  }, sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('No data found')))))));\n}\nLocalVariablesAndParams.propTypes = {\n  type: (prop_types__WEBPACK_IMPORTED_MODULE_10___default().number)\n};\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/components/LocalVariablesAndParams.jsx?");

/***/ }),

/***/ "./pgadmin/tools/debugger/static/js/components/Results.jsx":
/*!*****************************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/components/Results.jsx ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Results: () => (/* binding */ Results)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mui/material/styles */ \"./node_modules/@mui/material/styles/styled.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mui_material_Paper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/material/Paper */ \"./node_modules/@mui/material/Paper/Paper.js\");\n/* harmony import */ var _DebuggerComponent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DebuggerComponent */ \"./pgadmin/tools/debugger/static/js/components/DebuggerComponent.jsx\");\n/* harmony import */ var _DebuggerConstants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../DebuggerConstants */ \"./pgadmin/tools/debugger/static/js/DebuggerConstants.js\");\n/* harmony import */ var _static_js_components_Table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../static/js/components/Table */ \"./pgadmin/static/js/components/Table.jsx\");\n/////////////////////////////////////////////////////////////\n//\n// pgAdmin 4 - PostgreSQL Tools\n//\n// Copyright (C) 2013 - 2025, The pgAdmin Development Team\n// This software is released under the PostgreSQL Licence\n//\n//////////////////////////////////////////////////////////////\n\n\n\n\n\n\n\nconst StyledPaper = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(_mui_material_Paper__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(() => ({\n  flexGrow: 1,\n  minHeight: 0,\n  overflow: 'auto'\n}));\nfunction Results() {\n  const eventBus = react__WEBPACK_IMPORTED_MODULE_1___default().useContext(_DebuggerComponent__WEBPACK_IMPORTED_MODULE_2__.DebuggerEventsContext);\n  const [resultData, setResultData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n  const [columns, setColumns] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n  react__WEBPACK_IMPORTED_MODULE_1___default().useEffect(() => {\n    eventBus.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_3__.DEBUGGER_EVENTS.SET_RESULTS, (columnsData, values) => {\n      setResultData(values);\n      setColumns(columnsData);\n    });\n  }, []);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(StyledPaper, {\n    variant: \"outlined\",\n    elevation: 0\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Table__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"thead\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"tr\", {\n    key: lodash__WEBPACK_IMPORTED_MODULE_0___default().uniqueId('c')\n  }, columns.map(col => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"th\", {\n    key: col.name\n  }, col.name)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"tbody\", null, resultData.map(row => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"tr\", {\n    key: lodash__WEBPACK_IMPORTED_MODULE_0___default().uniqueId('c')\n  }, columns.map(col => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"td\", {\n    key: lodash__WEBPACK_IMPORTED_MODULE_0___default().uniqueId('c')\n  }, row[col.name])))))));\n}\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/components/Results.jsx?");

/***/ }),

/***/ "./pgadmin/tools/debugger/static/js/components/Stack.jsx":
/*!***************************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/components/Stack.jsx ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Stack: () => (/* binding */ Stack)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/material/styles */ \"./node_modules/@mui/material/styles/styled.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sources/gettext */ \"./pgadmin/static/js/gettext.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sources_gettext__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mui_material_TableContainer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/material/TableContainer */ \"./node_modules/@mui/material/TableContainer/TableContainer.js\");\n/* harmony import */ var _mui_material_Paper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/material/Paper */ \"./node_modules/@mui/material/Paper/Paper.js\");\n/* harmony import */ var _DebuggerComponent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DebuggerComponent */ \"./pgadmin/tools/debugger/static/js/components/DebuggerComponent.jsx\");\n/* harmony import */ var _DebuggerConstants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../DebuggerConstants */ \"./pgadmin/tools/debugger/static/js/DebuggerConstants.js\");\n/* harmony import */ var _static_js_components_FormComponents__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../static/js/components/FormComponents */ \"./pgadmin/static/js/components/FormComponents.jsx\");\n/* harmony import */ var _static_js_components_Table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../static/js/components/Table */ \"./pgadmin/static/js/components/Table.jsx\");\n/////////////////////////////////////////////////////////////\n//\n// pgAdmin 4 - PostgreSQL Tools\n//\n// Copyright (C) 2013 - 2025, The pgAdmin Development Team\n// This software is released under the PostgreSQL Licence\n//\n//////////////////////////////////////////////////////////////\n\n\n\n\n\n\n\n\n\n\n\nconst StyledPaper = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_mui_material_Paper__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(() => ({\n  flexGrow: 1,\n  minHeight: 0,\n  overflow: 'auto',\n  maxHeight: '100%',\n  '& .Stack-container': {\n    maxHeight: '100%'\n  }\n}));\nfunction Stack() {\n  const eventBus = react__WEBPACK_IMPORTED_MODULE_2___default().useContext(_DebuggerComponent__WEBPACK_IMPORTED_MODULE_3__.DebuggerEventsContext);\n  const [stackData, setStackData] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n  const [disableFrameSelection, setDisableFrameSelection] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n  react__WEBPACK_IMPORTED_MODULE_2___default().useEffect(() => {\n    eventBus.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_4__.DEBUGGER_EVENTS.SET_STACK, stackValues => {\n      setStackData(stackValues);\n    });\n    eventBus.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_4__.DEBUGGER_EVENTS.GET_TOOL_BAR_BUTTON_STATUS, status => {\n      setDisableFrameSelection(status.disabled);\n    });\n  }, []);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(StyledPaper, {\n    variant: \"outlined\",\n    elevation: 0\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_mui_material_TableContainer__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    className: \"Stack-container\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_static_js_components_Table__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    \"aria-label\": \"sticky table\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"thead\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"tr\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"th\", null, sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('Name')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"th\", null, sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('Value')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"th\", null, sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('Line No.')))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"tbody\", null, stackData?.map((row, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"tr\", {\n    key: lodash__WEBPACK_IMPORTED_MODULE_0___default().uniqueId('c')\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"td\", null, row.targetname), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"td\", null, row.args), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"td\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_static_js_components_FormComponents__WEBPACK_IMPORTED_MODULE_5__.InputText, {\n    \"data-test\": \"stack-select-frame\",\n    value: row.linenumber,\n    readonly: true,\n    disabled: disableFrameSelection,\n    onClick: () => {\n      if (!disableFrameSelection) eventBus.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_4__.DEBUGGER_EVENTS.SET_FRAME, index);\n    }\n  }))))))));\n}\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/components/Stack.jsx?");

/***/ }),

/***/ "./pgadmin/tools/debugger/static/js/components/ToolBar.jsx":
/*!*****************************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/components/ToolBar.jsx ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToolBar: () => (/* binding */ ToolBar)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/material/styles */ \"./node_modules/@mui/material/styles/styled.js\");\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/material */ \"./node_modules/@mui/material/Box/Box.js\");\n/* harmony import */ var _mui_icons_material_FormatIndentIncrease__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @mui/icons-material/FormatIndentIncrease */ \"./node_modules/@mui/icons-material/esm/FormatIndentIncrease.js\");\n/* harmony import */ var _mui_icons_material_FormatIndentDecrease__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @mui/icons-material/FormatIndentDecrease */ \"./node_modules/@mui/icons-material/esm/FormatIndentDecrease.js\");\n/* harmony import */ var _mui_icons_material_PlayCircleFilledWhite__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @mui/icons-material/PlayCircleFilledWhite */ \"./node_modules/@mui/icons-material/esm/PlayCircleFilledWhite.js\");\n/* harmony import */ var _mui_icons_material_FiberManualRecord__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @mui/icons-material/FiberManualRecord */ \"./node_modules/@mui/icons-material/esm/FiberManualRecord.js\");\n/* harmony import */ var _mui_icons_material_NotInterested__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @mui/icons-material/NotInterested */ \"./node_modules/@mui/icons-material/esm/NotInterested.js\");\n/* harmony import */ var _mui_icons_material_StopRounded__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @mui/icons-material/StopRounded */ \"./node_modules/@mui/icons-material/esm/StopRounded.js\");\n/* harmony import */ var _mui_icons_material_HelpRounded__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @mui/icons-material/HelpRounded */ \"./node_modules/@mui/icons-material/esm/HelpRounded.js\");\n/* harmony import */ var _mui_icons_material_RotateLeftRounded__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @mui/icons-material/RotateLeftRounded */ \"./node_modules/@mui/icons-material/esm/RotateLeftRounded.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sources/gettext */ \"./pgadmin/static/js/gettext.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sources_gettext__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var sources_url_for__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! sources/url_for */ \"./pgadmin/static/js/url_for.js\");\n/* harmony import */ var sources_url_for__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sources_url_for__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../static/js/components/Buttons */ \"./pgadmin/static/js/components/Buttons.jsx\");\n/* harmony import */ var _DebuggerComponent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DebuggerComponent */ \"./pgadmin/tools/debugger/static/js/components/DebuggerComponent.jsx\");\n/* harmony import */ var _DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../DebuggerConstants */ \"./pgadmin/tools/debugger/static/js/DebuggerConstants.js\");\n/* harmony import */ var _static_js_custom_hooks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../static/js/custom_hooks */ \"./pgadmin/static/js/custom_hooks.js\");\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n/////////////////////////////////////////////////////////////\n//\n// pgAdmin 4 - PostgreSQL Tools\n//\n// Copyright (C) 2013 - 2025, The pgAdmin Development Team\n// This software is released under the PostgreSQL Licence\n//\n//////////////////////////////////////////////////////////////\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst StyledBox = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(_mui_material__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(_ref => {\n  let {\n    theme\n  } = _ref;\n  return _objectSpread({\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '4px',\n    backgroundColor: theme.otherVars.editorToolbarBg,\n    flexWrap: 'wrap'\n  }, theme.mixins.panelBorder.bottom);\n});\nfunction ToolBar() {\n  const debuggerCtx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_DebuggerComponent__WEBPACK_IMPORTED_MODULE_5__.DebuggerContext);\n  const eventBus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_DebuggerComponent__WEBPACK_IMPORTED_MODULE_5__.DebuggerEventsContext);\n  let preferences = debuggerCtx.preferences.debugger;\n\n  // JS not allowing to use constants as key hence unable to use MENUS constants,\n  // If required any changes in key update MENUS constans as well form DebuggerConstans file.\n  const [buttonsDisabled, setButtonsDisabled] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n    'stop': true,\n    'clear-all-breakpoints': true,\n    'toggle-breakpoint': true,\n    'start': true,\n    'step-over': true,\n    'step-into': true\n  });\n  const setDisableButton = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function (name) {\n    let disable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    setButtonsDisabled(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: disable\n    }));\n  }, []);\n  const clearAllBreakpoint = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    eventBus.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.DEBUGGER_EVENTS.TRIGGER_CLEAR_ALL_BREAKPOINTS);\n  }, []);\n  const toggleBreakpoint = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    eventBus.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.DEBUGGER_EVENTS.TRIGGER_TOGGLE_BREAKPOINTS);\n  }, []);\n  const stop = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    eventBus.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.DEBUGGER_EVENTS.TRIGGER_STOP_DEBUGGING);\n  });\n  const continueDebugger = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    eventBus.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.DEBUGGER_EVENTS.TRIGGER_CONTINUE_DEBUGGING);\n  });\n  const stepOverDebugger = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    eventBus.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.DEBUGGER_EVENTS.TRIGGER_STEPOVER_DEBUGGING);\n  });\n  const stepInTODebugger = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    eventBus.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.DEBUGGER_EVENTS.TRIGGER_STEINTO_DEBUGGING);\n  });\n  const onHelpClick = () => {\n    let url = sources_url_for__WEBPACK_IMPORTED_MODULE_3___default()('help.static', {\n      'filename': 'debugger.html'\n    });\n    window.open(url, 'pgadmin_help');\n  };\n  const onResetLayout = () => {\n    eventBus.fireEvent(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.DEBUGGER_EVENTS.TRIGGER_RESET_LAYOUT);\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    eventBus.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.DEBUGGER_EVENTS.DISABLE_MENU, () => {\n      setDisableButton(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.START, true);\n      setDisableButton(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.STEPINTO, true);\n      setDisableButton(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.STEPOVER, true);\n      setDisableButton(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.CLEAR_ALL_BREAKPOINT, true);\n      setDisableButton(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.TOGGLE_BREAKPOINT, true);\n      setDisableButton(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.STOP, true);\n    });\n    eventBus.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.DEBUGGER_EVENTS.ENABLE_MENU, () => {\n      setDisableButton(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.START, false);\n      setDisableButton(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.STEPINTO, false);\n      setDisableButton(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.STEPOVER, false);\n      setDisableButton(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.CLEAR_ALL_BREAKPOINT, false);\n      setDisableButton(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.TOGGLE_BREAKPOINT, false);\n      setDisableButton(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.STOP, false);\n    });\n    eventBus.registerListener(_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.DEBUGGER_EVENTS.ENABLE_SPECIFIC_MENU, key => {\n      setDisableButton(key, false);\n    });\n  }, []);\n\n  /* Button shortcuts */\n  (0,_static_js_custom_hooks__WEBPACK_IMPORTED_MODULE_7__.useKeyboardShortcuts)([{\n    shortcut: preferences.btn_step_into,\n    options: {\n      callback: () => {\n        !buttonsDisabled[_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.STEPINTO] && stepInTODebugger();\n      }\n    }\n  }, {\n    shortcut: preferences.btn_step_over,\n    options: {\n      callback: () => {\n        !buttonsDisabled[_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.STEPOVER] && stepOverDebugger();\n      }\n    }\n  }, {\n    shortcut: preferences.btn_start,\n    options: {\n      callback: () => {\n        !buttonsDisabled[_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.START] && continueDebugger();\n      }\n    }\n  }, {\n    shortcut: preferences.btn_toggle_breakpoint,\n    options: {\n      callback: () => {\n        !buttonsDisabled[_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.TOGGLE_BREAKPOINT] && toggleBreakpoint();\n      }\n    }\n  }, {\n    shortcut: preferences.btn_clear_breakpoints,\n    options: {\n      callback: () => {\n        !buttonsDisabled[_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.CLEAR_ALL_BREAKPOINT] && clearAllBreakpoint();\n      }\n    }\n  }, {\n    shortcut: preferences.btn_stop,\n    options: {\n      callback: () => {\n        !buttonsDisabled[_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.STOP] && stop();\n      }\n    }\n  }], debuggerCtx.containerRef);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(StyledBox, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__.PgButtonGroup, {\n    size: \"small\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__.PgIconButton, {\n    \"data-test\": \"step-in\",\n    title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Step into'),\n    disabled: buttonsDisabled[_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.STEPINTO],\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_icons_material_FormatIndentIncrease__WEBPACK_IMPORTED_MODULE_10__[\"default\"], null),\n    onClick: () => {\n      stepInTODebugger();\n    },\n    shortcut: preferences?.btn_step_into\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__.PgIconButton, {\n    \"data-test\": \"step-over\",\n    title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Step over'),\n    disabled: buttonsDisabled[_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.STEPOVER],\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_icons_material_FormatIndentDecrease__WEBPACK_IMPORTED_MODULE_11__[\"default\"], null),\n    onClick: () => {\n      stepOverDebugger();\n    },\n    shortcut: preferences?.btn_step_over\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__.PgIconButton, {\n    \"data-test\": \"debugger-contiue\",\n    title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Continue/Start'),\n    disabled: buttonsDisabled[_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.START],\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_icons_material_PlayCircleFilledWhite__WEBPACK_IMPORTED_MODULE_12__[\"default\"], null),\n    onClick: () => {\n      continueDebugger();\n    },\n    shortcut: preferences?.btn_start\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__.PgButtonGroup, {\n    size: \"small\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__.PgIconButton, {\n    \"data-test\": \"toggle-breakpoint\",\n    title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Toggle breakpoint'),\n    disabled: buttonsDisabled[_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.TOGGLE_BREAKPOINT],\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_icons_material_FiberManualRecord__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n      style: {\n        height: '2rem'\n      }\n    }),\n    shortcut: preferences?.btn_toggle_breakpoint,\n    onClick: () => {\n      toggleBreakpoint();\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__.PgIconButton, {\n    \"data-test\": \"clear-breakpoint\",\n    title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Clear all breakpoints'),\n    disabled: buttonsDisabled[_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.CLEAR_ALL_BREAKPOINT],\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_icons_material_NotInterested__WEBPACK_IMPORTED_MODULE_14__[\"default\"], null),\n    shortcut: preferences?.btn_clear_breakpoints,\n    onClick: () => {\n      clearAllBreakpoint();\n    }\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__.PgButtonGroup, {\n    size: \"small\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__.PgIconButton, {\n    \"data-test\": \"stop-debugger\",\n    title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Stop'),\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_icons_material_StopRounded__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n      style: {\n        height: '2rem'\n      }\n    }),\n    disabled: buttonsDisabled[_DebuggerConstants__WEBPACK_IMPORTED_MODULE_6__.MENUS.STOP],\n    onClick: () => {\n      stop();\n    },\n    shortcut: preferences?.btn_stop\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__.PgButtonGroup, {\n    size: \"small\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__.PgIconButton, {\n    \"data-test\": \"debugger-help\",\n    title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Help'),\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_icons_material_HelpRounded__WEBPACK_IMPORTED_MODULE_16__[\"default\"], null),\n    onClick: onHelpClick\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__.PgButtonGroup, {\n    size: \"small\",\n    variant: \"text\",\n    style: {\n      marginLeft: 'auto'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_static_js_components_Buttons__WEBPACK_IMPORTED_MODULE_4__.PgIconButton, {\n    title: sources_gettext__WEBPACK_IMPORTED_MODULE_2___default()('Reset layout'),\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_mui_icons_material_RotateLeftRounded__WEBPACK_IMPORTED_MODULE_17__[\"default\"], null),\n    onClick: onResetLayout\n  })));\n}\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/components/ToolBar.jsx?");

/***/ }),

/***/ "./pgadmin/tools/debugger/static/js/debugger_ui.js":
/*!*********************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/debugger_ui.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FunctionArguments)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sources/gettext */ \"./pgadmin/static/js/gettext.js\");\n/* harmony import */ var sources_gettext__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sources_gettext__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var sources_pgadmin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sources/pgadmin */ \"./pgadmin/static/js/pgadmin.js\");\n/* harmony import */ var sources_pgadmin__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sources_pgadmin__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_DebuggerArgumentComponent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/DebuggerArgumentComponent */ \"./pgadmin/tools/debugger/static/js/components/DebuggerArgumentComponent.jsx\");\n///////////////////////////////////////////////////////////////\n////\n//// pgAdmin 4 - PostgreSQL Tools\n////\n//// Copyright (C) 2013 - 2025, The pgAdmin Development Team\n//// This software is released under the PostgreSQL Licence\n////\n////////////////////////////////////////////////////////////////\n\n\n\n\n\nclass FunctionArguments {\n  show(debugInfo, restartDebug, isEdbProc, transId) {\n    let t = (sources_pgadmin__WEBPACK_IMPORTED_MODULE_2___default().Browser).tree,\n      i = t.selected(),\n      d = i ? t.itemData(i) : undefined;\n    if (!d) return;\n    let treeInfo = t.getTreeNodeHierarchy(i);\n    // Render Debugger argument component\n    sources_pgadmin__WEBPACK_IMPORTED_MODULE_2___default().Browser.notifier.showModal(sources_gettext__WEBPACK_IMPORTED_MODULE_1___default()('Debugger'), closeModal => {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_DebuggerArgumentComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        closeModal: closeModal,\n        debuggerInfo: debugInfo,\n        restartDebug: restartDebug,\n        isEdbProc: isEdbProc,\n        transId: transId,\n        pgTreeInfo: treeInfo,\n        pgData: d\n      });\n    }, {\n      isFullScreen: false,\n      isResizeable: true,\n      showFullScreen: true,\n      isFullWidth: true,\n      dialogWidth: (sources_pgadmin__WEBPACK_IMPORTED_MODULE_2___default().Browser).stdW.md,\n      dialogHeight: (sources_pgadmin__WEBPACK_IMPORTED_MODULE_2___default().Browser).stdH.md,\n      id: 'id-debugger'\n    });\n  }\n}\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/debugger_ui.js?");

/***/ }),

/***/ "./pgadmin/tools/debugger/static/js/debugger_utils.js":
/*!************************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/debugger_utils.js ***!
  \************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sqleditor_static_js_sqleditor_title__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../sqleditor/static/js/sqleditor_title */ \"./pgadmin/tools/sqleditor/static/js/sqleditor_title.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n//////////////////////////////////////////////////////////////////////////\n//\n// pgAdmin 4 - PostgreSQL Tools\n//\n// Copyright (C) 2013 - 2025, The pgAdmin Development Team\n// This software is released under the PostgreSQL Licence\n//\n//////////////////////////////////////////////////////////////////////////\n\n\nfunction getFunctionId(treeInfoObject) {\n  let objectId;\n  if (treeInfoObject) {\n    if (treeInfoObject.function?._id) {\n      objectId = treeInfoObject.function._id;\n    } else if (treeInfoObject.edbfunc?._id) {\n      objectId = treeInfoObject.edbfunc._id;\n    }\n  }\n  return objectId;\n}\nfunction getProcedureId(treeInfoObject) {\n  let objectId;\n  if (treeInfoObject) {\n    if (treeInfoObject.procedure?._id) {\n      objectId = treeInfoObject.procedure._id;\n    } else if (treeInfoObject.edbproc?._id) {\n      objectId = treeInfoObject.edbproc._id;\n    }\n  }\n  return objectId;\n}\nfunction getDebuggerTitle(preferences, function_name, schema_name, database_name) {\n  let custom_title = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  let debugger_title_placeholder = '';\n  if (custom_title) {\n    debugger_title_placeholder = custom_title;\n  } else {\n    debugger_title_placeholder = preferences['debugger_tab_title_placeholder'];\n  }\n  let function_data = function_name.split('(');\n  function_name = get_function_name(function_name);\n  let args_list = function_data[function_data.length - 1].split(')');\n  let args = '';\n  if (args_list.length > 0) {\n    args = args.concat(args_list[0]);\n  }\n  let title_data = {\n    'function_name': function_name,\n    'args': args,\n    'schema': schema_name,\n    'database': database_name,\n    'type': 'debugger'\n  };\n  let title = (0,_sqleditor_static_js_sqleditor_title__WEBPACK_IMPORTED_MODULE_0__.generateTitle)(debugger_title_placeholder, title_data);\n  return title;\n}\nfunction get_function_name(function_name) {\n  let function_data = function_name.split('(');\n  function_data.splice(-1, 1);\n  let index = null;\n  let func_name = '';\n  for (index = 0; index < function_data.length; index++) {\n    func_name = func_name.concat(function_data[index]);\n    if (index != function_data.length - 1) {\n      func_name = func_name.concat('(');\n    }\n  }\n  return func_name;\n}\nfunction getAppropriateLabel(treeInfo) {\n  if (treeInfo.function) {\n    return treeInfo.function.label;\n  } else if (treeInfo.trigger_function) {\n    return treeInfo.trigger_function.label;\n  } else if (treeInfo.trigger) {\n    return treeInfo.trigger.label;\n  } else if (treeInfo.edbfunc) {\n    return treeInfo.edbfunc.label;\n  } else if (treeInfo.edbproc) {\n    return treeInfo.edbproc.label;\n  } else {\n    return treeInfo.procedure.label;\n  }\n}\nmodule.exports = {\n  getFunctionId: getFunctionId,\n  getProcedureId: getProcedureId,\n  setDebuggerTitle: getDebuggerTitle,\n  getDebuggerTitle: getDebuggerTitle,\n  getAppropriateLabel: getAppropriateLabel\n};\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/debugger_utils.js?");

/***/ }),

/***/ "./pgadmin/tools/debugger/static/js/index.js":
/*!***************************************************!*\
  !*** ./pgadmin/tools/debugger/static/js/index.js ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var sources_pgadmin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sources/pgadmin */ \"./pgadmin/static/js/pgadmin.js\");\n/* harmony import */ var sources_pgadmin__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sources_pgadmin__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var top_browser_static_js_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! top/browser/static/js/browser */ \"./pgadmin/browser/static/js/browser.js\");\n/* harmony import */ var _DebuggerModule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DebuggerModule */ \"./pgadmin/tools/debugger/static/js/DebuggerModule.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n/////////////////////////////////////////////////////////////\n//\n// pgAdmin 4 - PostgreSQL Tools\n//\n// Copyright (C) 2013 - 2025, The pgAdmin Development Team\n// This software is released under the PostgreSQL Licence\n//\n//////////////////////////////////////////////////////////////\n\n\n\n\nif (!(sources_pgadmin__WEBPACK_IMPORTED_MODULE_0___default().Tools)) {\n  (sources_pgadmin__WEBPACK_IMPORTED_MODULE_0___default().Tools) = {};\n}\n(sources_pgadmin__WEBPACK_IMPORTED_MODULE_0___default().Tools).Debugger = _DebuggerModule__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance((sources_pgadmin__WEBPACK_IMPORTED_MODULE_0___default()), top_browser_static_js_browser__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\nmodule.exports = {\n  Debugger: _DebuggerModule__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n};\n\n//# sourceURL=webpack:///./pgadmin/tools/debugger/static/js/index.js?");

/***/ }),

/***/ "pgadmin.browser.endpoints":
/*!********************************************!*\
  !*** external "pgadmin.browser.endpoints" ***!
  \********************************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_pgadmin_browser_endpoints__;

/***/ }),

/***/ "translations":
/*!*******************************!*\
  !*** external "translations" ***!
  \*******************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_translations__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var chunkIds = deferred[i][0];
/******/ 				var fn = deferred[i][1];
/******/ 				var priority = deferred[i][2];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/harmony module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.hmd = (module) => {
/******/ 			module = Object.create(module);
/******/ 			if (!module.children) module.children = [];
/******/ 			Object.defineProperty(module, 'exports', {
/******/ 				enumerable: true,
/******/ 				set: () => {
/******/ 					throw new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);
/******/ 				}
/******/ 			});
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"debugger": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var runtime = data[2];
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors"], () => (__webpack_require__("./pgadmin/tools/debugger/static/js/index.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	__webpack_exports__ = __webpack_exports__["default"];
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});;
//# sourceMappingURL=../../../debugger.js.map